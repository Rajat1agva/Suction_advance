
SuctionPump(pwm).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b6  00804000  0000399e  00003a32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000399e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003a  008040b6  008040b6  00003ae8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003ae8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003b18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006655  00000000  00000000  00003d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002f58  00000000  00000000  0000a36d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015cf  00000000  00000000  0000d2c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000071c  00000000  00000000  0000e894  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000029de  00000000  00000000  0000efb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000257b  00000000  00000000  0001198e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00013f09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 11 	jmp	0x236a	; 0x236a <__ctors_end>
       4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
       8:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
       c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      10:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      14:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      18:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      1c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      20:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      24:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      28:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      2c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      30:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      34:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      38:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      3c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      40:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      44:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      48:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      4c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      50:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      54:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      58:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      5c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      60:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      64:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      68:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      6c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      70:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      74:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      78:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      7c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      80:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      84:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      88:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      8c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      90:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      94:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      98:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      9c:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      a0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      a4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      a8:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      ac:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      b0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      b4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      b8:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      bc:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      c0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      c4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      c8:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      cc:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      d0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      d4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      d8:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      dc:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      e0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      e4:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__bad_interrupt>
      e8:	07 63       	ori	r16, 0x37	; 55
      ea:	42 36       	cpi	r20, 0x62	; 98
      ec:	b7 9b       	sbis	0x16, 7	; 22
      ee:	d8 a7       	std	Y+40, r29	; 0x28
      f0:	1a 39       	cpi	r17, 0x9A	; 154
      f2:	68 56       	subi	r22, 0x68	; 104
      f4:	18 ae       	std	Y+56, r1	; 0x38
      f6:	ba ab       	std	Y+50, r27	; 0x32
      f8:	55 8c       	ldd	r5, Z+29	; 0x1d
      fa:	1d 3c       	cpi	r17, 0xCD	; 205
      fc:	b7 cc       	rjmp	.-1682   	; 0xfffffa6c <__eeprom_end+0xff7efa6c>
      fe:	57 63       	ori	r21, 0x37	; 55
     100:	bd 6d       	ori	r27, 0xDD	; 221
     102:	ed fd       	.word	0xfded	; ????
     104:	75 3e       	cpi	r23, 0xE5	; 229
     106:	f6 17       	cp	r31, r22
     108:	72 31       	cpi	r23, 0x12	; 18
     10a:	bf 00       	.word	0x00bf	; ????
     10c:	00 00       	nop
     10e:	80 3f       	cpi	r24, 0xF0	; 240
     110:	08 00       	.word	0x0008	; ????
     112:	00 00       	nop
     114:	be 92       	st	-X, r11
     116:	24 49       	sbci	r18, 0x94	; 148
     118:	12 3e       	cpi	r17, 0xE2	; 226
     11a:	ab aa       	std	Y+51, r10	; 0x33
     11c:	aa 2a       	or	r10, r26
     11e:	be cd       	rjmp	.-1156   	; 0xfffffc9c <__eeprom_end+0xff7efc9c>
     120:	cc cc       	rjmp	.-1640   	; 0xfffffaba <__eeprom_end+0xff7efaba>
     122:	4c 3e       	cpi	r20, 0xEC	; 236
     124:	00 00       	nop
     126:	00 80       	ld	r0, Z
     128:	be ab       	std	Y+54, r27	; 0x36
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	aa 3e       	cpi	r26, 0xEA	; 234
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	bf 00       	.word	0x00bf	; ????
     134:	00 00       	nop
     136:	80 3f       	cpi	r24, 0xF0	; 240
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	00 08       	sbc	r0, r0
     13e:	41 78       	andi	r20, 0x81	; 129
     140:	d3 bb       	out	0x13, r29	; 19
     142:	43 87       	std	Z+11, r20	; 0x0b
     144:	d1 13       	cpse	r29, r17
     146:	3d 19       	sub	r19, r13
     148:	0e 3c       	cpi	r16, 0xCE	; 206
     14a:	c3 bd       	out	0x23, r28	; 35
     14c:	42 82       	std	Z+2, r4	; 0x02
     14e:	ad 2b       	or	r26, r29
     150:	3e 68       	ori	r19, 0x8E	; 142
     152:	ec 82       	std	Y+4, r14	; 0x04
     154:	76 be       	out	0x36, r7	; 54
     156:	d9 8f       	std	Y+25, r29	; 0x19
     158:	e1 a9       	ldd	r30, Z+49	; 0x31
     15a:	3e 4c       	sbci	r19, 0xCE	; 206
     15c:	80 ef       	ldi	r24, 0xF0	; 240
     15e:	ff be       	out	0x3f, r15	; 63
     160:	01 c4       	rjmp	.+2050   	; 0x964 <__LOCK_REGION_LENGTH__+0x564>
     162:	ff 7f       	andi	r31, 0xFF	; 255
     164:	3f 00       	.word	0x003f	; ????
     166:	00 00       	nop
	...

0000016a <__trampolines_end>:
     16a:	7f ff       	.word	0xff7f	; ????
     16c:	ff c0       	rjmp	.+510    	; 0x36c <__EEPROM_REGION_LENGTH__+0x16c>
     16e:	80 00       	.word	0x0080	; ????
     170:	00 20       	and	r0, r0
     172:	80 06       	cpc	r8, r16
     174:	00 20       	and	r0, r0
     176:	80 06       	cpc	r8, r16
     178:	00 20       	and	r0, r0
     17a:	80 06       	cpc	r8, r16
     17c:	00 38       	cpi	r16, 0x80	; 128
     17e:	80 06       	cpc	r8, r16
     180:	00 24       	eor	r0, r0
     182:	80 06       	cpc	r8, r16
     184:	00 24       	eor	r0, r0
     186:	80 06       	cpc	r8, r16
     188:	00 24       	eor	r0, r0
     18a:	80 06       	cpc	r8, r16
     18c:	00 24       	eor	r0, r0
     18e:	80 06       	cpc	r8, r16
     190:	00 38       	cpi	r16, 0x80	; 128
     192:	80 00       	.word	0x0080	; ????
     194:	00 20       	and	r0, r0
     196:	80 06       	cpc	r8, r16
     198:	00 20       	and	r0, r0
     19a:	80 06       	cpc	r8, r16
     19c:	00 20       	and	r0, r0
     19e:	80 00       	.word	0x0080	; ????
     1a0:	00 20       	and	r0, r0
     1a2:	7f ff       	.word	0xff7f	; ????
     1a4:	ff c0       	rjmp	.+510    	; 0x3a4 <__EEPROM_REGION_LENGTH__+0x1a4>

000001a6 <system24x36>:
	...
     1c6:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
     1d6:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
     1e6:	01 01 00 00 00 00 00 00 00 00 00 00 00 01 01 01     ................
     1f6:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
     206:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
     216:	01 01 01 01 00 00 00 00 00 00 00 00 01 01 01 01     ................
     226:	01 01 00 00 00 00 01 01 01 01 01 01 00 00 00 00     ................
     236:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
     246:	01 01 01 01 01 00 00 00 00 00 00 01 01 01 01 01     ................
	...
     25e:	01 01 01 01 01 00 00 00 00 00 01 01 01 01 01 00     ................
	...
     276:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
     28e:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
     2a6:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 00 00     ................
	...
     2be:	00 00 01 01 01 01 00 00 00 01 01 01 01 01 00 00     ................
	...
     2d6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     2ee:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     306:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     31e:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     336:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     34e:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     366:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     37e:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     396:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     3ae:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     3c6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     3de:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     3f6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
     40e:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 00 00     ................
	...
     426:	00 00 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
     43e:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
     456:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
     46e:	00 01 01 01 01 01 00 00 00 00 00 01 01 01 01 01     ................
	...
     486:	01 01 01 01 01 00 00 00 00 00 00 01 01 01 01 01     ................
	...
     49e:	01 01 01 01 01 00 00 00 00 00 00 00 01 01 01 01     ................
     4ae:	01 01 00 00 00 00 01 01 01 01 01 01 00 00 00 00     ................
     4be:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
     4ce:	01 01 01 01 00 00 00 00 00 00 00 00 00 01 01 01     ................
     4de:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
     4ee:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
     4fe:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     526:	00 00 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     53e:	00 00 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     556:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     56e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
     57e:	00 00 00 00 00 00 00 01 01 01 01 01 01 01 00 00     ................
	...
     596:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...
     5ae:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...
     5c6:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...
     5e6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     5fe:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     616:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     62e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     646:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     65e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     676:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     68e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     6a6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     6be:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     6d6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     6ee:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     706:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     71e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     736:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     74e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     766:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     77e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     796:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     7ae:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     7c6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     7de:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     7f6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
     806:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     816:	01 01 01 01 00 00 00 00 00 00 00 01 01 01 01 01     ................
     826:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
     836:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     846:	01 01 01 01 00 00 00 00 00 00 00 01 01 01 01 01     ................
     856:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
	...
     86e:	01 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
     87e:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
     88e:	01 01 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
     89e:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
     8ae:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     8be:	01 01 01 01 00 00 00 00 00 00 00 01 01 01 01 01     ................
     8ce:	00 00 00 00 00 00 01 01 01 01 01 01 01 00 00 00     ................
     8de:	00 00 00 01 01 01 00 00 00 00 00 00 00 00 00 01     ................
     8ee:	01 01 01 01 01 00 00 00 00 00 00 01 00 00 00 00     ................
	...
     906:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     91e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     936:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     94e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     966:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     97e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     996:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     9ae:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     9c6:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     9de:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
     9ee:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
	...
     a0a:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     a22:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     a3a:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     a52:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
     a62:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
     a7e:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     a96:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     aae:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     ac6:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
     ad6:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
	...
     af2:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     b0a:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     b22:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
     b32:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
	...
     b4e:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     b66:	00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     b76:	01 01 01 01 01 01 01 00 00 00 01 01 01 01 01 01     ................
     b86:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 00     ................
     b96:	00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     ba6:	01 01 01 01 01 01 01 00 00 00 01 01 01 01 01 01     ................
     bb6:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 00     ................
     bc6:	00 00 00 00 00 00 00 01 01 01 01 01 01 01 01 00     ................
	...
     bde:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     bee:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 01     ................
     bfe:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
     c0e:	00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     c1e:	01 01 01 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
     c2e:	00 00 00 00 00 01 01 01 01 01 01 01 00 00 00 00     ................
     c3e:	00 00 01 01 01 00 00 00 00 00 00 00 00 00 00 01     ................
     c4e:	01 01 01 01 01 00 00 00 00 00 01 00 00 00 00 00     ................
     c5e:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
     c7e:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c96:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     cae:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     cc6:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     cde:	01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
     cee:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
	...
     d0a:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     d22:	01 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
     d32:	00 00 00 00 01 01 01 01 01 01 01 01 01 00 00 00     ................
	...
     d4e:	01 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     d66:	01 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
     d7e:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
	...
     d9a:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     db2:	00 00 00 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
     dce:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     de6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     dfe:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e16:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e2e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e46:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e5e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e76:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     e8e:	01 01 01 01 01 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     ea6:	01 01 01 01 01 00 00 00 00 01 01 01 00 00 00 00     ................
     eb6:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
     ec6:	00 01 01 01 01 01 01 00 00 00 00 00 00 01 01 01     ................
     ed6:	01 01 01 01 00 00 00 00 00 01 01 01 01 01 01 01     ................
     ee6:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
     ef6:	00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     f06:	01 01 00 00 00 00 00 00 00 00 01 01 01 01 01 01     ................
     f16:	01 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
     f4a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     f62:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     f7a:	00 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
     f92:	01 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
     fa2:	00 00 00 00 00 00 00 01 01 01 01 01 01 01 01 01     ................
	...
     fbe:	00 00 00 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
	...
     fd6:	00 00 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
	...
     fee:	00 01 01 01 01 01 00 01 01 01 01 01 00 00 00 00     ................
	...
    1006:	01 01 01 01 01 00 00 01 01 01 01 01 00 00 00 00     ................
    1016:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 01     ................
    1026:	01 01 01 01 00 00 00 00 00 00 00 00 00 00 01 01     ................
    1036:	01 01 01 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
    1046:	00 00 00 00 00 01 01 01 01 01 00 00 00 00 00 01     ................
    1056:	01 01 01 01 00 00 00 00 00 00 00 00 00 01 01 01     ................
    1066:	01 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
    1076:	00 00 00 00 01 01 01 01 01 00 00 00 00 00 00 01     ................
    1086:	01 01 01 01 00 00 00 00 00 00 00 01 01 01 01 01     ................
    1096:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
    10a6:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 01     ................
    10b6:	01 01 01 01 00 00 00 00 00 01 01 01 01 01 00 00     ................
    10c6:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
    10d6:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 01     ................
    10e6:	01 01 01 01 00 00 00 00 01 01 01 01 00 00 00 00     ................
    10f6:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
    1106:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1116:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1126:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1136:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1146:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1156:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
	...
    1172:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    118a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    11a2:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    11ba:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    11d2:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    11ea:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1202:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    121a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1232:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    124a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1262:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    127a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 01     ................
    128a:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129a:	01 01 01 00 00 00 00 01 01 01 01 01 01 01 01 01     ................
    12aa:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 01     ................
    12ba:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    12ca:	01 01 01 00 00 00 00 01 01 01 01 01 01 01 01 01     ................
    12da:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 01     ................
    12ea:	01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    12fa:	00 00 00 00 00 00 00 01 01 01 01 01 00 00 00 00     ................
	...
    1316:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    132e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1346:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    135e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1376:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    138e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    13a6:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    13be:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
	...
    13d6:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    13e6:	01 01 00 00 00 00 00 00 00 00 00 01 01 01 01 01     ................
    13f6:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
    1406:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1416:	01 01 01 01 01 00 00 00 00 00 00 01 01 00 00 00     ................
    1426:	00 00 00 00 00 00 01 01 01 01 01 01 01 00 00 00     ................
	...
    1446:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    145e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1476:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    148e:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    14a6:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    14be:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    14d6:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    14ee:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1506:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    151e:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1536:	00 01 01 01 01 01 00 00 00 00 01 00 00 00 00 00     ................
	...
    154e:	01 01 01 01 01 01 00 00 00 00 01 01 01 00 00 00     ................
	...
    1566:	01 01 01 01 01 00 00 00 00 00 01 01 01 01 01 01     ................
    1576:	00 00 00 00 00 00 01 01 01 01 01 01 01 00 00 00     ................
    1586:	00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1596:	01 01 01 01 00 00 00 00 00 00 01 01 01 01 01 01     ................
    15a6:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
    15b6:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    15c6:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
    15d6:	01 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    15f2:	00 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
    1602:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
    1612:	01 00 00 00 00 00 00 00 00 00 00 00 01 01 01 01     ................
    1622:	01 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
    1632:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1642:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 01     ................
    1652:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1662:	00 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
    167a:	01 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1692:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
    16a2:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    16be:	00 00 00 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
    16d6:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    16ee:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1706:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    171e:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1736:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 01     ................
    1746:	01 00 00 00 00 00 00 00 00 01 01 01 01 01 00 00     ................
    1756:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
    1766:	00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1776:	01 01 01 01 01 00 00 00 00 01 01 01 01 01 01 01     ................
    1786:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
    1796:	00 01 01 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
    17a6:	01 01 01 01 01 01 00 00 00 01 01 01 01 01 01 00     ................
	...
    17be:	00 01 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    17d6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    17ee:	00 00 01 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1806:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    181e:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1836:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    184e:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 00 00     ................
	...
    1866:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 01 00     ................
	...
    187e:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 01 00     ................
	...
    1896:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 01 00     ................
	...
    18ae:	00 00 01 01 01 01 01 00 00 00 00 01 01 01 01 01     ................
	...
    18c6:	00 00 01 01 01 01 01 00 00 00 00 01 01 01 01 01     ................
    18d6:	01 00 00 00 00 00 00 00 00 01 01 01 01 01 00 00     ................
    18e6:	00 00 00 00 01 01 01 01 01 01 00 00 00 00 00 01     ................
    18f6:	01 01 01 01 01 01 00 00 00 00 00 00 00 01 01 01     ................
    1906:	01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00     ................
    1916:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
    1926:	01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 01     ................
    1936:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...
    195e:	00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    196e:	01 01 01 01 01 01 01 00 00 01 01 01 01 01 01 01     ................
    197e:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 00     ................
    198e:	00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    199e:	01 01 01 01 01 01 01 00 00 01 01 01 01 01 01 01     ................
    19ae:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 00     ................
	...
    19ce:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    19e6:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    19fe:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a16:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a2e:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
    1a3e:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    1a5a:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1a72:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1a8a:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1aa2:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1aba:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ad2:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1aea:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
    1afa:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    1b16:	00 00 00 01 01 01 01 01 01 00 00 00 00 00 00 00     ................
	...
    1b2e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1b46:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1b5e:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1b76:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1b8e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ba6:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1bbe:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
    1bce:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    1bea:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1c02:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    1c1a:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1c32:	00 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1c4a:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1c62:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1c7a:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
    1c8a:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    1cae:	00 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    1cbe:	00 00 00 00 00 00 00 01 01 01 01 01 01 01 01 01     ................
    1cce:	01 01 01 00 00 00 00 00 00 00 00 00 00 01 01 01     ................
    1cde:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
    1cee:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1cfe:	01 01 01 01 01 00 00 00 00 00 00 01 01 01 01 01     ................
    1d0e:	01 01 00 00 00 00 00 01 01 01 01 01 01 01 00 00     ................
    1d1e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    1d2e:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 01     ................
	...
    1d46:	00 01 01 01 01 01 01 00 00 00 01 01 01 01 01 00     ................
	...
    1d5e:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 01 00     ................
	...
    1d76:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 01 00     ................
	...
    1d8e:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 01 00     ................
	...
    1da6:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 01 01     ................
	...
    1dbe:	00 00 01 01 01 01 01 00 00 00 00 01 01 01 01 01     ................
	...
    1dd6:	00 00 01 01 01 01 00 00 00 00 00 01 01 01 01 01     ................
    1de6:	01 01 00 00 00 00 00 00 00 01 01 01 01 01 00 00     ................
    1df6:	00 00 00 00 01 01 01 01 01 01 01 00 00 00 00 00     ................
    1e06:	00 01 01 01 01 00 00 00 00 00 00 00 00 01 01 01     ................
    1e16:	01 01 01 01 01 00 00 00 01 01 01 01 00 00 00 00     ................
    1e26:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
    1e36:	01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
    1e46:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
    1e56:	00 00 00 00 00 01 01 01 01 01 01 01 01 01 01 01     ................
    1e66:	01 01 01 01 00 00 00 00 00 00 00 00 01 01 01 01     ................
    1e76:	01 00 00 00 01 01 01 01 01 01 01 01 01 00 00 00     ................
    1e86:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 01     ................
    1e96:	01 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
    1eae:	01 01 01 01 01 01 01 00 00 00 01 01 01 01 01 00     ................
	...
    1ec6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    1ede:	00 00 01 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1ef6:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1f0e:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1f26:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1f3e:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    1f56:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 01 00     ................
	...
    1f6e:	00 00 01 01 01 01 01 01 00 00 01 01 01 01 01 00     ................
	...
    1f86:	00 00 01 01 01 01 01 00 00 00 01 01 01 01 01 01     ................
	...
    1f9e:	00 01 01 01 01 01 01 00 00 00 00 01 01 01 01 01     ................
    1fae:	01 01 00 00 00 00 00 01 01 01 01 01 01 01 00 00     ................
    1fbe:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1fce:	01 01 01 01 01 00 00 00 00 00 00 00 00 01 01 01     ................
    1fde:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
    1fee:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
    1ffe:	01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    200e:	00 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    201e:	00 00 00 00 00 00 00 01 01 01 01 01 01 01 01 01     ................
    202e:	01 01 00 00 00 00 00 00 00 00 00 00 00 01 01 01     ................
    203e:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
    204e:	00 00 00 00 01 01 01 01 01 01 01 01 01 01 01 01     ................
    205e:	01 01 01 01 00 00 00 00 00 00 00 01 01 01 01 01     ................
    206e:	01 01 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
    207e:	00 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    208e:	01 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
    20a6:	00 01 01 01 01 01 00 00 00 00 01 01 01 01 01 00     ................
	...
    20be:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    20d6:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    20ee:	00 00 01 01 01 01 01 00 00 01 01 01 01 01 00 00     ................
	...
    2106:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    211e:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    2136:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    214e:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 00 00     ................
	...
    2166:	00 00 00 01 01 01 01 01 00 01 01 01 01 01 01 00     ................
	...
    217e:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 01 00     ................
	...
    2196:	00 00 00 01 01 01 01 01 00 00 01 01 01 01 01 01     ................
	...
    21ae:	00 00 01 01 01 01 01 01 00 00 00 01 01 01 01 01     ................
    21be:	01 01 00 00 00 00 00 00 01 01 01 01 01 01 01 01     ................
    21ce:	00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    21de:	01 01 01 01 01 01 01 01 00 00 00 00 01 01 01 01     ................
    21ee:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    21fe:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 01 01     ................
    220e:	01 00 00 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    221e:	01 01 01 01 01 01 01 00 00 00 00 01 01 01 01 00     ................
	...
    223e:	00 00 00 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    2256:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    226e:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    2286:	00 00 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    229e:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    22b6:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    22ce:	01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
    22de:	00 00 00 00 00 00 00 01 01 01 01 01 01 00 00 00     ................
	...
    22fa:	00 00 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
	...
    2312:	01 01 01 01 01 01 01 00 00 00 00 00 00 00 00 00     ................
    2322:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...
    233a:	01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00     ................
	...
    2352:	01 01 01 01 01 01 01 01 01 01 01 00 00 00 00 00     ................
    2362:	00 00 00 00                                         ....

00002366 <columnColorToByte>:
    2366:	00 4a 92 ff                                         .J..

0000236a <__ctors_end>:
    236a:	11 24       	eor	r1, r1
    236c:	1f be       	out	0x3f, r1	; 63
    236e:	cf ef       	ldi	r28, 0xFF	; 255
    2370:	cd bf       	out	0x3d, r28	; 61
    2372:	df e7       	ldi	r29, 0x7F	; 127
    2374:	de bf       	out	0x3e, r29	; 62

00002376 <__do_copy_data>:
    2376:	10 e4       	ldi	r17, 0x40	; 64
    2378:	a0 e0       	ldi	r26, 0x00	; 0
    237a:	b0 e4       	ldi	r27, 0x40	; 64
    237c:	ee e9       	ldi	r30, 0x9E	; 158
    237e:	f9 e3       	ldi	r31, 0x39	; 57
    2380:	00 e0       	ldi	r16, 0x00	; 0
    2382:	0b bf       	out	0x3b, r16	; 59
    2384:	02 c0       	rjmp	.+4      	; 0x238a <__do_copy_data+0x14>
    2386:	07 90       	elpm	r0, Z+
    2388:	0d 92       	st	X+, r0
    238a:	a6 3b       	cpi	r26, 0xB6	; 182
    238c:	b1 07       	cpc	r27, r17
    238e:	d9 f7       	brne	.-10     	; 0x2386 <__do_copy_data+0x10>

00002390 <__do_clear_bss>:
    2390:	20 e4       	ldi	r18, 0x40	; 64
    2392:	a6 eb       	ldi	r26, 0xB6	; 182
    2394:	b0 e4       	ldi	r27, 0x40	; 64
    2396:	01 c0       	rjmp	.+2      	; 0x239a <.do_clear_bss_start>

00002398 <.do_clear_bss_loop>:
    2398:	1d 92       	st	X+, r1

0000239a <.do_clear_bss_start>:
    239a:	a0 3f       	cpi	r26, 0xF0	; 240
    239c:	b2 07       	cpc	r27, r18
    239e:	e1 f7       	brne	.-8      	; 0x2398 <.do_clear_bss_loop>
    23a0:	0e 94 0c 18 	call	0x3018	; 0x3018 <main>
    23a4:	0c 94 cd 1c 	jmp	0x399a	; 0x399a <_exit>

000023a8 <__bad_interrupt>:
    23a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000023ac <reverse>:
{
	for (uint8_t i = 0; i < arSize; i++)
	{
		array[i] = c;
	}
}
    23ac:	61 50       	subi	r22, 0x01	; 1
    23ae:	71 09       	sbc	r23, r1
    23b0:	20 e0       	ldi	r18, 0x00	; 0
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	0e c0       	rjmp	.+28     	; 0x23d2 <reverse+0x26>
    23b6:	dc 01       	movw	r26, r24
    23b8:	a2 0f       	add	r26, r18
    23ba:	b3 1f       	adc	r27, r19
    23bc:	4c 91       	ld	r20, X
    23be:	fc 01       	movw	r30, r24
    23c0:	e6 0f       	add	r30, r22
    23c2:	f7 1f       	adc	r31, r23
    23c4:	50 81       	ld	r21, Z
    23c6:	5c 93       	st	X, r21
    23c8:	40 83       	st	Z, r20
    23ca:	2f 5f       	subi	r18, 0xFF	; 255
    23cc:	3f 4f       	sbci	r19, 0xFF	; 255
    23ce:	61 50       	subi	r22, 0x01	; 1
    23d0:	71 09       	sbc	r23, r1
    23d2:	26 17       	cp	r18, r22
    23d4:	37 07       	cpc	r19, r23
    23d6:	7c f3       	brlt	.-34     	; 0x23b6 <reverse+0xa>
    23d8:	08 95       	ret

000023da <intToStr>:
    23da:	cf 92       	push	r12
    23dc:	df 92       	push	r13
    23de:	ef 92       	push	r14
    23e0:	ff 92       	push	r15
    23e2:	0f 93       	push	r16
    23e4:	1f 93       	push	r17
    23e6:	cf 93       	push	r28
    23e8:	df 93       	push	r29
    23ea:	8a 01       	movw	r16, r20
    23ec:	69 01       	movw	r12, r18
    23ee:	c0 e0       	ldi	r28, 0x00	; 0
    23f0:	d0 e0       	ldi	r29, 0x00	; 0
    23f2:	11 c0       	rjmp	.+34     	; 0x2416 <intToStr+0x3c>
    23f4:	78 01       	movw	r14, r16
    23f6:	ec 0e       	add	r14, r28
    23f8:	fd 1e       	adc	r15, r29
    23fa:	2a e0       	ldi	r18, 0x0A	; 10
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	40 e0       	ldi	r20, 0x00	; 0
    2400:	50 e0       	ldi	r21, 0x00	; 0
    2402:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <__divmodsi4>
    2406:	60 5d       	subi	r22, 0xD0	; 208
    2408:	f7 01       	movw	r30, r14
    240a:	60 83       	st	Z, r22
    240c:	62 2f       	mov	r22, r18
    240e:	73 2f       	mov	r23, r19
    2410:	84 2f       	mov	r24, r20
    2412:	95 2f       	mov	r25, r21
    2414:	21 96       	adiw	r28, 0x01	; 1
    2416:	61 15       	cp	r22, r1
    2418:	71 05       	cpc	r23, r1
    241a:	81 05       	cpc	r24, r1
    241c:	91 05       	cpc	r25, r1
    241e:	51 f7       	brne	.-44     	; 0x23f4 <intToStr+0x1a>
    2420:	06 c0       	rjmp	.+12     	; 0x242e <intToStr+0x54>
    2422:	f8 01       	movw	r30, r16
    2424:	ec 0f       	add	r30, r28
    2426:	fd 1f       	adc	r31, r29
    2428:	80 e3       	ldi	r24, 0x30	; 48
    242a:	80 83       	st	Z, r24
    242c:	21 96       	adiw	r28, 0x01	; 1
    242e:	cc 15       	cp	r28, r12
    2430:	dd 05       	cpc	r29, r13
    2432:	bc f3       	brlt	.-18     	; 0x2422 <intToStr+0x48>
    2434:	be 01       	movw	r22, r28
    2436:	c8 01       	movw	r24, r16
    2438:	0e 94 d6 11 	call	0x23ac	; 0x23ac <reverse>
    243c:	f8 01       	movw	r30, r16
    243e:	ec 0f       	add	r30, r28
    2440:	fd 1f       	adc	r31, r29
    2442:	10 82       	st	Z, r1
    2444:	ce 01       	movw	r24, r28
    2446:	df 91       	pop	r29
    2448:	cf 91       	pop	r28
    244a:	1f 91       	pop	r17
    244c:	0f 91       	pop	r16
    244e:	ff 90       	pop	r15
    2450:	ef 90       	pop	r14
    2452:	df 90       	pop	r13
    2454:	cf 90       	pop	r12
    2456:	08 95       	ret

00002458 <ftoa>:
    2458:	8f 92       	push	r8
    245a:	9f 92       	push	r9
    245c:	af 92       	push	r10
    245e:	bf 92       	push	r11
    2460:	cf 92       	push	r12
    2462:	df 92       	push	r13
    2464:	ef 92       	push	r14
    2466:	ff 92       	push	r15
    2468:	0f 93       	push	r16
    246a:	1f 93       	push	r17
    246c:	cf 93       	push	r28
    246e:	df 93       	push	r29
    2470:	6b 01       	movw	r12, r22
    2472:	7c 01       	movw	r14, r24
    2474:	8a 01       	movw	r16, r20
    2476:	e9 01       	movw	r28, r18
    2478:	0e 94 76 19 	call	0x32ec	; 0x32ec <__fixsfsi>
    247c:	4b 01       	movw	r8, r22
    247e:	5c 01       	movw	r10, r24
    2480:	07 2e       	mov	r0, r23
    2482:	00 0c       	add	r0, r0
    2484:	88 0b       	sbc	r24, r24
    2486:	99 0b       	sbc	r25, r25
    2488:	0e 94 ae 19 	call	0x335c	; 0x335c <__floatsisf>
    248c:	9b 01       	movw	r18, r22
    248e:	ac 01       	movw	r20, r24
    2490:	c7 01       	movw	r24, r14
    2492:	b6 01       	movw	r22, r12
    2494:	0e 94 92 18 	call	0x3124	; 0x3124 <__subsf3>
    2498:	6b 01       	movw	r12, r22
    249a:	7c 01       	movw	r14, r24
    249c:	b4 01       	movw	r22, r8
    249e:	99 20       	and	r9, r9
    24a0:	24 f4       	brge	.+8      	; 0x24aa <ftoa+0x52>
    24a2:	66 27       	eor	r22, r22
    24a4:	77 27       	eor	r23, r23
    24a6:	68 19       	sub	r22, r8
    24a8:	79 09       	sbc	r23, r9
    24aa:	07 2e       	mov	r0, r23
    24ac:	00 0c       	add	r0, r0
    24ae:	88 0b       	sbc	r24, r24
    24b0:	99 0b       	sbc	r25, r25
    24b2:	20 e0       	ldi	r18, 0x00	; 0
    24b4:	30 e0       	ldi	r19, 0x00	; 0
    24b6:	a8 01       	movw	r20, r16
    24b8:	0e 94 ed 11 	call	0x23da	; 0x23da <intToStr>
    24bc:	5c 01       	movw	r10, r24
    24be:	20 97       	sbiw	r28, 0x00	; 0
    24c0:	81 f1       	breq	.+96     	; 0x2522 <ftoa+0xca>
    24c2:	f8 01       	movw	r30, r16
    24c4:	e8 0f       	add	r30, r24
    24c6:	f9 1f       	adc	r31, r25
    24c8:	8e e2       	ldi	r24, 0x2E	; 46
    24ca:	80 83       	st	Z, r24
    24cc:	be 01       	movw	r22, r28
    24ce:	0d 2e       	mov	r0, r29
    24d0:	00 0c       	add	r0, r0
    24d2:	88 0b       	sbc	r24, r24
    24d4:	99 0b       	sbc	r25, r25
    24d6:	0e 94 ae 19 	call	0x335c	; 0x335c <__floatsisf>
    24da:	9b 01       	movw	r18, r22
    24dc:	ac 01       	movw	r20, r24
    24de:	60 e0       	ldi	r22, 0x00	; 0
    24e0:	70 e0       	ldi	r23, 0x00	; 0
    24e2:	80 e2       	ldi	r24, 0x20	; 32
    24e4:	91 e4       	ldi	r25, 0x41	; 65
    24e6:	0e 94 d0 1a 	call	0x35a0	; 0x35a0 <pow>
    24ea:	9b 01       	movw	r18, r22
    24ec:	ac 01       	movw	r20, r24
    24ee:	c7 01       	movw	r24, r14
    24f0:	b6 01       	movw	r22, r12
    24f2:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__mulsf3>
    24f6:	2f ef       	ldi	r18, 0xFF	; 255
    24f8:	a2 1a       	sub	r10, r18
    24fa:	b2 0a       	sbc	r11, r18
    24fc:	0e 94 76 19 	call	0x32ec	; 0x32ec <__fixsfsi>
    2500:	9b 01       	movw	r18, r22
    2502:	77 23       	and	r23, r23
    2504:	24 f4       	brge	.+8      	; 0x250e <ftoa+0xb6>
    2506:	22 27       	eor	r18, r18
    2508:	33 27       	eor	r19, r19
    250a:	26 1b       	sub	r18, r22
    250c:	37 0b       	sbc	r19, r23
    250e:	a8 01       	movw	r20, r16
    2510:	4a 0d       	add	r20, r10
    2512:	5b 1d       	adc	r21, r11
    2514:	b9 01       	movw	r22, r18
    2516:	33 0f       	add	r19, r19
    2518:	88 0b       	sbc	r24, r24
    251a:	99 0b       	sbc	r25, r25
    251c:	9e 01       	movw	r18, r28
    251e:	0e 94 ed 11 	call	0x23da	; 0x23da <intToStr>
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	ff 90       	pop	r15
    252c:	ef 90       	pop	r14
    252e:	df 90       	pop	r13
    2530:	cf 90       	pop	r12
    2532:	bf 90       	pop	r11
    2534:	af 90       	pop	r10
    2536:	9f 90       	pop	r9
    2538:	8f 90       	pop	r8
    253a:	08 95       	ret

0000253c <USART1_init>:
    253c:	e0 e4       	ldi	r30, 0x40	; 64
    253e:	f4 e0       	ldi	r31, 0x04	; 4
    2540:	20 81       	ld	r18, Z
    2542:	2d 7f       	andi	r18, 0xFD	; 253
    2544:	20 83       	st	Z, r18
    2546:	20 81       	ld	r18, Z
    2548:	21 60       	ori	r18, 0x01	; 1
    254a:	20 83       	st	Z, r18
    254c:	bc 01       	movw	r22, r24
    254e:	80 e0       	ldi	r24, 0x00	; 0
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	0e 94 ac 19 	call	0x3358	; 0x3358 <__floatunsisf>
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e8       	ldi	r20, 0x80	; 128
    255c:	51 e4       	ldi	r21, 0x41	; 65
    255e:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__mulsf3>
    2562:	9b 01       	movw	r18, r22
    2564:	ac 01       	movw	r20, r24
    2566:	60 e0       	ldi	r22, 0x00	; 0
    2568:	7b e1       	ldi	r23, 0x1B	; 27
    256a:	87 eb       	ldi	r24, 0xB7	; 183
    256c:	9e e4       	ldi	r25, 0x4E	; 78
    256e:	0e 94 04 19 	call	0x3208	; 0x3208 <__divsf3>
    2572:	20 e0       	ldi	r18, 0x00	; 0
    2574:	30 e0       	ldi	r19, 0x00	; 0
    2576:	40 e0       	ldi	r20, 0x00	; 0
    2578:	5f e3       	ldi	r21, 0x3F	; 63
    257a:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    257e:	0e 94 7d 19 	call	0x32fa	; 0x32fa <__fixunssfsi>
    2582:	e0 e2       	ldi	r30, 0x20	; 32
    2584:	f8 e0       	ldi	r31, 0x08	; 8
    2586:	60 87       	std	Z+8, r22	; 0x08
    2588:	71 87       	std	Z+9, r23	; 0x09
    258a:	86 81       	ldd	r24, Z+6	; 0x06
    258c:	80 6c       	ori	r24, 0xC0	; 192
    258e:	86 83       	std	Z+6, r24	; 0x06
    2590:	08 95       	ret

00002592 <USART1_sendChar>:
    2592:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
    2596:	95 ff       	sbrs	r25, 5
    2598:	fc cf       	rjmp	.-8      	; 0x2592 <USART1_sendChar>
    259a:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
    259e:	08 95       	ret

000025a0 <USART1_sendString>:
    25a0:	0f 93       	push	r16
    25a2:	1f 93       	push	r17
    25a4:	cf 93       	push	r28
    25a6:	df 93       	push	r29
    25a8:	8c 01       	movw	r16, r24
    25aa:	c0 e0       	ldi	r28, 0x00	; 0
    25ac:	d0 e0       	ldi	r29, 0x00	; 0
    25ae:	07 c0       	rjmp	.+14     	; 0x25be <USART1_sendString+0x1e>
    25b0:	f8 01       	movw	r30, r16
    25b2:	ec 0f       	add	r30, r28
    25b4:	fd 1f       	adc	r31, r29
    25b6:	80 81       	ld	r24, Z
    25b8:	0e 94 c9 12 	call	0x2592	; 0x2592 <USART1_sendChar>
    25bc:	21 96       	adiw	r28, 0x01	; 1
    25be:	f8 01       	movw	r30, r16
    25c0:	01 90       	ld	r0, Z+
    25c2:	00 20       	and	r0, r0
    25c4:	e9 f7       	brne	.-6      	; 0x25c0 <USART1_sendString+0x20>
    25c6:	31 97       	sbiw	r30, 0x01	; 1
    25c8:	e0 1b       	sub	r30, r16
    25ca:	f1 0b       	sbc	r31, r17
    25cc:	ce 17       	cp	r28, r30
    25ce:	df 07       	cpc	r29, r31
    25d0:	78 f3       	brcs	.-34     	; 0x25b0 <USART1_sendString+0x10>
    25d2:	8a e0       	ldi	r24, 0x0A	; 10
    25d4:	0e 94 c9 12 	call	0x2592	; 0x2592 <USART1_sendChar>
    25d8:	df 91       	pop	r29
    25da:	cf 91       	pop	r28
    25dc:	1f 91       	pop	r17
    25de:	0f 91       	pop	r16
    25e0:	08 95       	ret

000025e2 <USART1_sendFloat>:
    25e2:	9a 01       	movw	r18, r20
    25e4:	4a eb       	ldi	r20, 0xBA	; 186
    25e6:	50 e4       	ldi	r21, 0x40	; 64
    25e8:	0e 94 2c 12 	call	0x2458	; 0x2458 <ftoa>
    25ec:	8a eb       	ldi	r24, 0xBA	; 186
    25ee:	90 e4       	ldi	r25, 0x40	; 64
    25f0:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    25f4:	08 95       	ret

000025f6 <SPI_0_init>:
    25f6:	e0 e0       	ldi	r30, 0x00	; 0
    25f8:	f4 e0       	ldi	r31, 0x04	; 4
    25fa:	80 81       	ld	r24, Z
    25fc:	80 68       	ori	r24, 0x80	; 128
    25fe:	80 83       	st	Z, r24
    2600:	a4 e0       	ldi	r26, 0x04	; 4
    2602:	b4 e0       	ldi	r27, 0x04	; 4
    2604:	8c 91       	ld	r24, X
    2606:	80 68       	ori	r24, 0x80	; 128
    2608:	8c 93       	st	X, r24
    260a:	80 81       	ld	r24, Z
    260c:	80 61       	ori	r24, 0x10	; 16
    260e:	80 83       	st	Z, r24
    2610:	80 81       	ld	r24, Z
    2612:	8f 7d       	andi	r24, 0xDF	; 223
    2614:	80 83       	st	Z, r24
    2616:	80 81       	ld	r24, Z
    2618:	80 64       	ori	r24, 0x40	; 64
    261a:	80 83       	st	Z, r24
    261c:	e0 e4       	ldi	r30, 0x40	; 64
    261e:	f9 e0       	ldi	r31, 0x09	; 9
    2620:	80 81       	ld	r24, Z
    2622:	80 63       	ori	r24, 0x30	; 48
    2624:	80 83       	st	Z, r24
    2626:	80 81       	ld	r24, Z
    2628:	81 60       	ori	r24, 0x01	; 1
    262a:	80 83       	st	Z, r24
    262c:	8c 91       	ld	r24, X
    262e:	80 68       	ori	r24, 0x80	; 128
    2630:	8c 93       	st	X, r24
    2632:	08 95       	ret

00002634 <SPI_0_send_char>:
    2634:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
    2638:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
    263c:	88 23       	and	r24, r24
    263e:	e4 f7       	brge	.-8      	; 0x2638 <SPI_0_send_char+0x4>
    2640:	08 95       	ret

00002642 <I2C_0_stop_transmission>:
    2642:	e0 e0       	ldi	r30, 0x00	; 0
    2644:	f9 e0       	ldi	r31, 0x09	; 9
    2646:	81 e0       	ldi	r24, 0x01	; 1
    2648:	85 83       	std	Z+5, r24	; 0x05
    264a:	83 e0       	ldi	r24, 0x03	; 3
    264c:	84 83       	std	Z+4, r24	; 0x04
    264e:	08 95       	ret

00002650 <I2C_0_initialization>:
    2650:	e0 e0       	ldi	r30, 0x00	; 0
    2652:	f9 e0       	ldi	r31, 0x09	; 9
    2654:	80 81       	ld	r24, Z
    2656:	8f 7e       	andi	r24, 0xEF	; 239
    2658:	80 83       	st	Z, r24
    265a:	80 81       	ld	r24, Z
    265c:	83 7f       	andi	r24, 0xF3	; 243
    265e:	80 83       	st	Z, r24
    2660:	80 81       	ld	r24, Z
    2662:	8d 7f       	andi	r24, 0xFD	; 253
    2664:	80 83       	st	Z, r24
    2666:	08 95       	ret

00002668 <I2C_0_master_initialization>:
    2668:	e0 e0       	ldi	r30, 0x00	; 0
    266a:	f9 e0       	ldi	r31, 0x09	; 9
    266c:	87 e6       	ldi	r24, 0x67	; 103
    266e:	86 83       	std	Z+6, r24	; 0x06
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	85 83       	std	Z+5, r24	; 0x05
    2674:	83 81       	ldd	r24, Z+3	; 0x03
    2676:	8a 60       	ori	r24, 0x0A	; 10
    2678:	83 83       	std	Z+3, r24	; 0x03
    267a:	83 81       	ldd	r24, Z+3	; 0x03
    267c:	81 60       	ori	r24, 0x01	; 1
    267e:	83 83       	std	Z+3, r24	; 0x03
    2680:	08 95       	ret

00002682 <I2C_0_sendAddress>:
    2682:	cf 93       	push	r28
    2684:	df 93       	push	r29
    2686:	c8 2f       	mov	r28, r24
    2688:	d6 2f       	mov	r29, r22
    268a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    268e:	83 70       	andi	r24, 0x03	; 3
    2690:	83 30       	cpi	r24, 0x03	; 3
    2692:	89 f4       	brne	.+34     	; 0x26b6 <I2C_0_sendAddress+0x34>
    2694:	8e e3       	ldi	r24, 0x3E	; 62
    2696:	90 e4       	ldi	r25, 0x40	; 64
    2698:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    269c:	20 e6       	ldi	r18, 0x60	; 96
    269e:	3a ee       	ldi	r19, 0xEA	; 234
    26a0:	01 c0       	rjmp	.+2      	; 0x26a4 <I2C_0_sendAddress+0x22>
    26a2:	9c 01       	movw	r18, r24
    26a4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    26a8:	83 70       	andi	r24, 0x03	; 3
    26aa:	83 30       	cpi	r24, 0x03	; 3
    26ac:	21 f4       	brne	.+8      	; 0x26b6 <I2C_0_sendAddress+0x34>
    26ae:	c9 01       	movw	r24, r18
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	23 2b       	or	r18, r19
    26b4:	b1 f7       	brne	.-20     	; 0x26a2 <I2C_0_sendAddress+0x20>
    26b6:	85 e0       	ldi	r24, 0x05	; 5
    26b8:	80 93 05 09 	sts	0x0905, r24	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    26bc:	dd 23       	and	r29, r29
    26be:	41 f0       	breq	.+16     	; 0x26d0 <I2C_0_sendAddress+0x4e>
    26c0:	8c 2f       	mov	r24, r28
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	88 0f       	add	r24, r24
    26c6:	99 1f       	adc	r25, r25
    26c8:	81 60       	ori	r24, 0x01	; 1
    26ca:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    26ce:	04 c0       	rjmp	.+8      	; 0x26d8 <I2C_0_sendAddress+0x56>
    26d0:	8c 2f       	mov	r24, r28
    26d2:	88 0f       	add	r24, r24
    26d4:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    26d8:	80 e6       	ldi	r24, 0x60	; 96
    26da:	9a ee       	ldi	r25, 0xEA	; 234
    26dc:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    26e0:	24 ff       	sbrs	r18, 4
    26e2:	06 c0       	rjmp	.+12     	; 0x26f0 <I2C_0_sendAddress+0x6e>
    26e4:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    26e8:	26 fd       	sbrc	r18, 6
    26ea:	02 c0       	rjmp	.+4      	; 0x26f0 <I2C_0_sendAddress+0x6e>
    26ec:	01 97       	sbiw	r24, 0x01	; 1
    26ee:	b1 f7       	brne	.-20     	; 0x26dc <I2C_0_sendAddress+0x5a>
    26f0:	89 2b       	or	r24, r25
    26f2:	21 f4       	brne	.+8      	; 0x26fc <I2C_0_sendAddress+0x7a>
    26f4:	88 e4       	ldi	r24, 0x48	; 72
    26f6:	90 e4       	ldi	r25, 0x40	; 64
    26f8:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    26fc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2700:	82 ff       	sbrs	r24, 2
    2702:	04 c0       	rjmp	.+8      	; 0x270c <I2C_0_sendAddress+0x8a>
    2704:	80 e5       	ldi	r24, 0x50	; 80
    2706:	90 e4       	ldi	r25, 0x40	; 64
    2708:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    270c:	df 91       	pop	r29
    270e:	cf 91       	pop	r28
    2710:	08 95       	ret

00002712 <I2C_0_recieveData>:
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	c0 e6       	ldi	r28, 0x60	; 96
    2718:	da ee       	ldi	r29, 0xEA	; 234
    271a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    271e:	88 23       	and	r24, r24
    2720:	14 f0       	brlt	.+4      	; 0x2726 <I2C_0_recieveData+0x14>
    2722:	21 97       	sbiw	r28, 0x01	; 1
    2724:	d1 f7       	brne	.-12     	; 0x271a <I2C_0_recieveData+0x8>
    2726:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    272a:	83 fd       	sbrc	r24, 3
    272c:	04 c0       	rjmp	.+8      	; 0x2736 <I2C_0_recieveData+0x24>
    272e:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2732:	82 ff       	sbrs	r24, 2
    2734:	06 c0       	rjmp	.+12     	; 0x2742 <I2C_0_recieveData+0x30>
    2736:	83 e8       	ldi	r24, 0x83	; 131
    2738:	90 e4       	ldi	r25, 0x40	; 64
    273a:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    273e:	0e 94 21 13 	call	0x2642	; 0x2642 <I2C_0_stop_transmission>
    2742:	cd 2b       	or	r28, r29
    2744:	21 f4       	brne	.+8      	; 0x274e <I2C_0_recieveData+0x3c>
    2746:	88 e4       	ldi	r24, 0x48	; 72
    2748:	90 e4       	ldi	r25, 0x40	; 64
    274a:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
    274e:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    2752:	df 91       	pop	r29
    2754:	cf 91       	pop	r28
    2756:	08 95       	ret

00002758 <Sensor_init>:
    2758:	0e 94 28 13 	call	0x2650	; 0x2650 <I2C_0_initialization>
    275c:	0e 94 34 13 	call	0x2668	; 0x2668 <I2C_0_master_initialization>
    2760:	61 e0       	ldi	r22, 0x01	; 1
    2762:	88 e7       	ldi	r24, 0x78	; 120
    2764:	0e 94 41 13 	call	0x2682	; 0x2682 <I2C_0_sendAddress>
    2768:	08 95       	ret

0000276a <pressureRead>:
    276a:	cf 92       	push	r12
    276c:	df 92       	push	r13
    276e:	ef 92       	push	r14
    2770:	ff 92       	push	r15
    2772:	cf 93       	push	r28
    2774:	df 93       	push	r29
    2776:	0e 94 89 13 	call	0x2712	; 0x2712 <I2C_0_recieveData>
    277a:	8f 77       	andi	r24, 0x7F	; 127
    277c:	c8 2f       	mov	r28, r24
    277e:	d0 e0       	ldi	r29, 0x00	; 0
    2780:	dc 2f       	mov	r29, r28
    2782:	cc 27       	eor	r28, r28
    2784:	0e 94 89 13 	call	0x2712	; 0x2712 <I2C_0_recieveData>
    2788:	c8 2b       	or	r28, r24
    278a:	0e 94 89 13 	call	0x2712	; 0x2712 <I2C_0_recieveData>
    278e:	0e 94 89 13 	call	0x2712	; 0x2712 <I2C_0_recieveData>
    2792:	be 01       	movw	r22, r28
    2794:	80 e0       	ldi	r24, 0x00	; 0
    2796:	90 e0       	ldi	r25, 0x00	; 0
    2798:	0e 94 ac 19 	call	0x3358	; 0x3358 <__floatunsisf>
    279c:	20 e0       	ldi	r18, 0x00	; 0
    279e:	30 ed       	ldi	r19, 0xD0	; 208
    27a0:	4c e4       	ldi	r20, 0x4C	; 76
    27a2:	55 e4       	ldi	r21, 0x45	; 69
    27a4:	0e 94 92 18 	call	0x3124	; 0x3124 <__subsf3>
    27a8:	2b e7       	ldi	r18, 0x7B	; 123
    27aa:	34 e1       	ldi	r19, 0x14	; 20
    27ac:	43 e8       	ldi	r20, 0x83	; 131
    27ae:	53 e4       	ldi	r21, 0x43	; 67
    27b0:	0e 94 04 19 	call	0x3208	; 0x3208 <__divsf3>
    27b4:	20 e0       	ldi	r18, 0x00	; 0
    27b6:	30 e0       	ldi	r19, 0x00	; 0
    27b8:	a9 01       	movw	r20, r18
    27ba:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    27be:	6b 01       	movw	r12, r22
    27c0:	7c 01       	movw	r14, r24
    27c2:	20 e0       	ldi	r18, 0x00	; 0
    27c4:	30 e0       	ldi	r19, 0x00	; 0
    27c6:	48 ec       	ldi	r20, 0xC8	; 200
    27c8:	52 e4       	ldi	r21, 0x42	; 66
    27ca:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__gesf2>
    27ce:	18 16       	cp	r1, r24
    27d0:	1c f4       	brge	.+6      	; 0x27d8 <pressureRead+0x6e>
    27d2:	c1 2c       	mov	r12, r1
    27d4:	d1 2c       	mov	r13, r1
    27d6:	76 01       	movw	r14, r12
    27d8:	20 e0       	ldi	r18, 0x00	; 0
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	a9 01       	movw	r20, r18
    27de:	c7 01       	movw	r24, r14
    27e0:	b6 01       	movw	r22, r12
    27e2:	0e 94 ff 18 	call	0x31fe	; 0x31fe <__cmpsf2>
    27e6:	18 16       	cp	r1, r24
    27e8:	1c f0       	brlt	.+6      	; 0x27f0 <pressureRead+0x86>
    27ea:	c1 2c       	mov	r12, r1
    27ec:	d1 2c       	mov	r13, r1
    27ee:	76 01       	movw	r14, r12
    27f0:	c7 01       	movw	r24, r14
    27f2:	b6 01       	movw	r22, r12
    27f4:	df 91       	pop	r29
    27f6:	cf 91       	pop	r28
    27f8:	ff 90       	pop	r15
    27fa:	ef 90       	pop	r14
    27fc:	df 90       	pop	r13
    27fe:	cf 90       	pop	r12
    2800:	08 95       	ret

00002802 <ADC0_init>:
    2802:	82 e8       	ldi	r24, 0x82	; 130
    2804:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
    2808:	e0 e0       	ldi	r30, 0x00	; 0
    280a:	f6 e0       	ldi	r31, 0x06	; 6
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	82 83       	std	Z+2, r24	; 0x02
    2810:	80 83       	st	Z, r24
    2812:	08 95       	ret

00002814 <ADC0_start>:
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
    281a:	08 95       	ret

0000281c <ADC0_read>:
    281c:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    2820:	0e 94 0a 14 	call	0x2814	; 0x2814 <ADC0_start>
    2824:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
    2828:	80 ff       	sbrs	r24, 0
    282a:	fc cf       	rjmp	.-8      	; 0x2824 <ADC0_read+0x8>
    282c:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    2830:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    2834:	08 95       	ret

00002836 <ST7586_data>:
    2836:	0f 93       	push	r16
    2838:	1f 93       	push	r17
    283a:	cf 93       	push	r28
    283c:	df 93       	push	r29
    283e:	8c 01       	movw	r16, r24
    2840:	d6 2f       	mov	r29, r22
    2842:	e4 e0       	ldi	r30, 0x04	; 4
    2844:	f4 e0       	ldi	r31, 0x04	; 4
    2846:	80 81       	ld	r24, Z
    2848:	8f 77       	andi	r24, 0x7F	; 127
    284a:	80 83       	st	Z, r24
    284c:	c0 e0       	ldi	r28, 0x00	; 0
    284e:	07 c0       	rjmp	.+14     	; 0x285e <ST7586_data+0x28>
    2850:	f8 01       	movw	r30, r16
    2852:	ec 0f       	add	r30, r28
    2854:	f1 1d       	adc	r31, r1
    2856:	80 81       	ld	r24, Z
    2858:	0e 94 1a 13 	call	0x2634	; 0x2634 <SPI_0_send_char>
    285c:	cf 5f       	subi	r28, 0xFF	; 255
    285e:	cd 17       	cp	r28, r29
    2860:	b8 f3       	brcs	.-18     	; 0x2850 <ST7586_data+0x1a>
    2862:	e4 e0       	ldi	r30, 0x04	; 4
    2864:	f4 e0       	ldi	r31, 0x04	; 4
    2866:	80 81       	ld	r24, Z
    2868:	80 68       	ori	r24, 0x80	; 128
    286a:	80 83       	st	Z, r24
    286c:	df 91       	pop	r29
    286e:	cf 91       	pop	r28
    2870:	1f 91       	pop	r17
    2872:	0f 91       	pop	r16
    2874:	08 95       	ret

00002876 <ST7586_cmd>:
    2876:	0f 93       	push	r16
    2878:	1f 93       	push	r17
    287a:	cf 93       	push	r28
    287c:	df 93       	push	r29
    287e:	c4 e0       	ldi	r28, 0x04	; 4
    2880:	d4 e0       	ldi	r29, 0x04	; 4
    2882:	98 81       	ld	r25, Y
    2884:	9f 77       	andi	r25, 0x7F	; 127
    2886:	98 83       	st	Y, r25
    2888:	00 e2       	ldi	r16, 0x20	; 32
    288a:	14 e0       	ldi	r17, 0x04	; 4
    288c:	f8 01       	movw	r30, r16
    288e:	94 81       	ldd	r25, Z+4	; 0x04
    2890:	9f 7e       	andi	r25, 0xEF	; 239
    2892:	94 83       	std	Z+4, r25	; 0x04
    2894:	0e 94 1a 13 	call	0x2634	; 0x2634 <SPI_0_send_char>
    2898:	f8 01       	movw	r30, r16
    289a:	84 81       	ldd	r24, Z+4	; 0x04
    289c:	80 61       	ori	r24, 0x10	; 16
    289e:	84 83       	std	Z+4, r24	; 0x04
    28a0:	88 81       	ld	r24, Y
    28a2:	80 68       	ori	r24, 0x80	; 128
    28a4:	88 83       	st	Y, r24
    28a6:	df 91       	pop	r29
    28a8:	cf 91       	pop	r28
    28aa:	1f 91       	pop	r17
    28ac:	0f 91       	pop	r16
    28ae:	08 95       	ret

000028b0 <ST7586_setDispPosition>:
    28b0:	cf 92       	push	r12
    28b2:	df 92       	push	r13
    28b4:	ef 92       	push	r14
    28b6:	ff 92       	push	r15
    28b8:	0f 93       	push	r16
    28ba:	1f 93       	push	r17
    28bc:	cf 93       	push	r28
    28be:	df 93       	push	r29
    28c0:	00 d0       	rcall	.+0      	; 0x28c2 <ST7586_setDispPosition+0x12>
    28c2:	00 d0       	rcall	.+0      	; 0x28c4 <ST7586_setDispPosition+0x14>
    28c4:	cd b7       	in	r28, 0x3d	; 61
    28c6:	de b7       	in	r29, 0x3e	; 62
    28c8:	80 39       	cpi	r24, 0x90	; 144
    28ca:	31 e0       	ldi	r19, 0x01	; 1
    28cc:	93 07       	cpc	r25, r19
    28ce:	a8 f5       	brcc	.+106    	; 0x293a <ST7586_setDispPosition+0x8a>
    28d0:	40 39       	cpi	r20, 0x90	; 144
    28d2:	31 e0       	ldi	r19, 0x01	; 1
    28d4:	53 07       	cpc	r21, r19
    28d6:	88 f5       	brcc	.+98     	; 0x293a <ST7586_setDispPosition+0x8a>
    28d8:	69 3c       	cpi	r22, 0xC9	; 201
    28da:	78 f5       	brcc	.+94     	; 0x293a <ST7586_setDispPosition+0x8a>
    28dc:	29 3c       	cpi	r18, 0xC9	; 201
    28de:	68 f5       	brcc	.+90     	; 0x293a <ST7586_setDispPosition+0x8a>
    28e0:	48 17       	cp	r20, r24
    28e2:	59 07       	cpc	r21, r25
    28e4:	50 f1       	brcs	.+84     	; 0x293a <ST7586_setDispPosition+0x8a>
    28e6:	26 17       	cp	r18, r22
    28e8:	40 f1       	brcs	.+80     	; 0x293a <ST7586_setDispPosition+0x8a>
    28ea:	c2 2e       	mov	r12, r18
    28ec:	7a 01       	movw	r14, r20
    28ee:	d6 2e       	mov	r13, r22
    28f0:	8c 01       	movw	r16, r24
    28f2:	8a e2       	ldi	r24, 0x2A	; 42
    28f4:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    28f8:	19 82       	std	Y+1, r1	; 0x01
    28fa:	98 01       	movw	r18, r16
    28fc:	ab ea       	ldi	r26, 0xAB	; 171
    28fe:	ba ea       	ldi	r27, 0xAA	; 170
    2900:	0e 94 88 1c 	call	0x3910	; 0x3910 <__umulhisi3>
    2904:	96 95       	lsr	r25
    2906:	87 95       	ror	r24
    2908:	8a 83       	std	Y+2, r24	; 0x02
    290a:	1b 82       	std	Y+3, r1	; 0x03
    290c:	97 01       	movw	r18, r14
    290e:	0e 94 88 1c 	call	0x3910	; 0x3910 <__umulhisi3>
    2912:	96 95       	lsr	r25
    2914:	87 95       	ror	r24
    2916:	8c 83       	std	Y+4, r24	; 0x04
    2918:	64 e0       	ldi	r22, 0x04	; 4
    291a:	ce 01       	movw	r24, r28
    291c:	01 96       	adiw	r24, 0x01	; 1
    291e:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2922:	8b e2       	ldi	r24, 0x2B	; 43
    2924:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2928:	19 82       	std	Y+1, r1	; 0x01
    292a:	da 82       	std	Y+2, r13	; 0x02
    292c:	1b 82       	std	Y+3, r1	; 0x03
    292e:	cc 82       	std	Y+4, r12	; 0x04
    2930:	64 e0       	ldi	r22, 0x04	; 4
    2932:	ce 01       	movw	r24, r28
    2934:	01 96       	adiw	r24, 0x01	; 1
    2936:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    293a:	24 96       	adiw	r28, 0x04	; 4
    293c:	cd bf       	out	0x3d, r28	; 61
    293e:	de bf       	out	0x3e, r29	; 62
    2940:	df 91       	pop	r29
    2942:	cf 91       	pop	r28
    2944:	1f 91       	pop	r17
    2946:	0f 91       	pop	r16
    2948:	ff 90       	pop	r15
    294a:	ef 90       	pop	r14
    294c:	df 90       	pop	r13
    294e:	cf 90       	pop	r12
    2950:	08 95       	ret

00002952 <ST7586_fill>:
    2952:	1f 93       	push	r17
    2954:	cf 93       	push	r28
    2956:	df 93       	push	r29
    2958:	cd b7       	in	r28, 0x3d	; 61
    295a:	de b7       	in	r29, 0x3e	; 62
    295c:	c5 58       	subi	r28, 0x85	; 133
    295e:	d1 09       	sbc	r29, r1
    2960:	cd bf       	out	0x3d, r28	; 61
    2962:	de bf       	out	0x3e, r29	; 62
    2964:	90 e0       	ldi	r25, 0x00	; 0
    2966:	0f c0       	rjmp	.+30     	; 0x2986 <ST7586_fill+0x34>
    2968:	29 2f       	mov	r18, r25
    296a:	30 e0       	ldi	r19, 0x00	; 0
    296c:	e8 2f       	mov	r30, r24
    296e:	f0 e0       	ldi	r31, 0x00	; 0
    2970:	ea 59       	subi	r30, 0x9A	; 154
    2972:	fc 4d       	sbci	r31, 0xDC	; 220
    2974:	e4 91       	lpm	r30, Z
    2976:	a1 e0       	ldi	r26, 0x01	; 1
    2978:	b0 e0       	ldi	r27, 0x00	; 0
    297a:	ac 0f       	add	r26, r28
    297c:	bd 1f       	adc	r27, r29
    297e:	a2 0f       	add	r26, r18
    2980:	b3 1f       	adc	r27, r19
    2982:	ec 93       	st	X, r30
    2984:	9f 5f       	subi	r25, 0xFF	; 255
    2986:	95 38       	cpi	r25, 0x85	; 133
    2988:	78 f3       	brcs	.-34     	; 0x2968 <ST7586_fill+0x16>
    298a:	27 ec       	ldi	r18, 0xC7	; 199
    298c:	4f e8       	ldi	r20, 0x8F	; 143
    298e:	51 e0       	ldi	r21, 0x01	; 1
    2990:	60 e0       	ldi	r22, 0x00	; 0
    2992:	80 e0       	ldi	r24, 0x00	; 0
    2994:	90 e0       	ldi	r25, 0x00	; 0
    2996:	0e 94 58 14 	call	0x28b0	; 0x28b0 <ST7586_setDispPosition>
    299a:	8c e2       	ldi	r24, 0x2C	; 44
    299c:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    29a0:	10 e0       	ldi	r17, 0x00	; 0
    29a2:	06 c0       	rjmp	.+12     	; 0x29b0 <ST7586_fill+0x5e>
    29a4:	65 e8       	ldi	r22, 0x85	; 133
    29a6:	ce 01       	movw	r24, r28
    29a8:	01 96       	adiw	r24, 0x01	; 1
    29aa:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    29ae:	1f 5f       	subi	r17, 0xFF	; 255
    29b0:	18 3c       	cpi	r17, 0xC8	; 200
    29b2:	c0 f3       	brcs	.-16     	; 0x29a4 <ST7586_fill+0x52>
    29b4:	cb 57       	subi	r28, 0x7B	; 123
    29b6:	df 4f       	sbci	r29, 0xFF	; 255
    29b8:	cd bf       	out	0x3d, r28	; 61
    29ba:	de bf       	out	0x3e, r29	; 62
    29bc:	df 91       	pop	r29
    29be:	cf 91       	pop	r28
    29c0:	1f 91       	pop	r17
    29c2:	08 95       	ret

000029c4 <ST7586_init>:
    29c4:	0f 93       	push	r16
    29c6:	1f 93       	push	r17
    29c8:	cf 93       	push	r28
    29ca:	df 93       	push	r29
    29cc:	00 d0       	rcall	.+0      	; 0x29ce <ST7586_init+0xa>
    29ce:	00 d0       	rcall	.+0      	; 0x29d0 <ST7586_init+0xc>
    29d0:	cd b7       	in	r28, 0x3d	; 61
    29d2:	de b7       	in	r29, 0x3e	; 62
    29d4:	18 2f       	mov	r17, r24
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	80 93 ee 40 	sts	0x40EE, r24	; 0x8040ee <dataSerial+0x2>
    29dc:	e4 e0       	ldi	r30, 0x04	; 4
    29de:	f4 e0       	ldi	r31, 0x04	; 4
    29e0:	80 81       	ld	r24, Z
    29e2:	80 68       	ori	r24, 0x80	; 128
    29e4:	80 83       	st	Z, r24
    29e6:	e0 e2       	ldi	r30, 0x20	; 32
    29e8:	f4 e0       	ldi	r31, 0x04	; 4
    29ea:	84 81       	ldd	r24, Z+4	; 0x04
    29ec:	80 61       	ori	r24, 0x10	; 16
    29ee:	84 83       	std	Z+4, r24	; 0x04
    29f0:	e0 e4       	ldi	r30, 0x40	; 64
    29f2:	f4 e0       	ldi	r31, 0x04	; 4
    29f4:	84 81       	ldd	r24, Z+4	; 0x04
    29f6:	80 62       	ori	r24, 0x20	; 32
    29f8:	84 83       	std	Z+4, r24	; 0x04
    29fa:	8f e2       	ldi	r24, 0x2F	; 47
    29fc:	95 e7       	ldi	r25, 0x75	; 117
    29fe:	01 97       	sbiw	r24, 0x01	; 1
    2a00:	f1 f7       	brne	.-4      	; 0x29fe <ST7586_init+0x3a>
    2a02:	00 c0       	rjmp	.+0      	; 0x2a04 <ST7586_init+0x40>
    2a04:	00 00       	nop
    2a06:	84 81       	ldd	r24, Z+4	; 0x04
    2a08:	8f 7d       	andi	r24, 0xDF	; 223
    2a0a:	84 83       	std	Z+4, r24	; 0x04
    2a0c:	90 ea       	ldi	r25, 0xA0	; 160
    2a0e:	9a 95       	dec	r25
    2a10:	f1 f7       	brne	.-4      	; 0x2a0e <ST7586_init+0x4a>
    2a12:	84 81       	ldd	r24, Z+4	; 0x04
    2a14:	80 62       	ori	r24, 0x20	; 32
    2a16:	84 83       	std	Z+4, r24	; 0x04
    2a18:	2f ef       	ldi	r18, 0xFF	; 255
    2a1a:	89 ec       	ldi	r24, 0xC9	; 201
    2a1c:	98 e0       	ldi	r25, 0x08	; 8
    2a1e:	21 50       	subi	r18, 0x01	; 1
    2a20:	80 40       	sbci	r24, 0x00	; 0
    2a22:	90 40       	sbci	r25, 0x00	; 0
    2a24:	e1 f7       	brne	.-8      	; 0x2a1e <ST7586_init+0x5a>
    2a26:	00 c0       	rjmp	.+0      	; 0x2a28 <ST7586_init+0x64>
    2a28:	00 00       	nop
    2a2a:	81 e0       	ldi	r24, 0x01	; 1
    2a2c:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a30:	2f ef       	ldi	r18, 0xFF	; 255
    2a32:	89 ec       	ldi	r24, 0xC9	; 201
    2a34:	98 e0       	ldi	r25, 0x08	; 8
    2a36:	21 50       	subi	r18, 0x01	; 1
    2a38:	80 40       	sbci	r24, 0x00	; 0
    2a3a:	90 40       	sbci	r25, 0x00	; 0
    2a3c:	e1 f7       	brne	.-8      	; 0x2a36 <ST7586_init+0x72>
    2a3e:	00 c0       	rjmp	.+0      	; 0x2a40 <ST7586_init+0x7c>
    2a40:	00 00       	nop
    2a42:	81 e1       	ldi	r24, 0x11	; 17
    2a44:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a48:	88 e2       	ldi	r24, 0x28	; 40
    2a4a:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a4e:	80 ec       	ldi	r24, 0xC0	; 192
    2a50:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a54:	90 91 07 40 	lds	r25, 0x4007	; 0x804007 <display_vop>
    2a58:	80 91 08 40 	lds	r24, 0x4008	; 0x804008 <display_vop+0x1>
    2a5c:	99 83       	std	Y+1, r25	; 0x01
    2a5e:	8a 83       	std	Y+2, r24	; 0x02
    2a60:	62 e0       	ldi	r22, 0x02	; 2
    2a62:	ce 01       	movw	r24, r28
    2a64:	01 96       	adiw	r24, 0x01	; 1
    2a66:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2a6a:	83 ec       	ldi	r24, 0xC3	; 195
    2a6c:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a70:	05 e0       	ldi	r16, 0x05	; 5
    2a72:	09 83       	std	Y+1, r16	; 0x01
    2a74:	61 e0       	ldi	r22, 0x01	; 1
    2a76:	ce 01       	movw	r24, r28
    2a78:	01 96       	adiw	r24, 0x01	; 1
    2a7a:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2a7e:	84 ec       	ldi	r24, 0xC4	; 196
    2a80:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a84:	09 83       	std	Y+1, r16	; 0x01
    2a86:	61 e0       	ldi	r22, 0x01	; 1
    2a88:	ce 01       	movw	r24, r28
    2a8a:	01 96       	adiw	r24, 0x01	; 1
    2a8c:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2a90:	80 ed       	ldi	r24, 0xD0	; 208
    2a92:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2a96:	81 ed       	ldi	r24, 0xD1	; 209
    2a98:	89 83       	std	Y+1, r24	; 0x01
    2a9a:	61 e0       	ldi	r22, 0x01	; 1
    2a9c:	ce 01       	movw	r24, r28
    2a9e:	01 96       	adiw	r24, 0x01	; 1
    2aa0:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2aa4:	83 eb       	ldi	r24, 0xB3	; 179
    2aa6:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2aaa:	19 82       	std	Y+1, r1	; 0x01
    2aac:	61 e0       	ldi	r22, 0x01	; 1
    2aae:	ce 01       	movw	r24, r28
    2ab0:	01 96       	adiw	r24, 0x01	; 1
    2ab2:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2ab6:	85 eb       	ldi	r24, 0xB5	; 181
    2ab8:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2abc:	8b e8       	ldi	r24, 0x8B	; 139
    2abe:	89 83       	std	Y+1, r24	; 0x01
    2ac0:	61 e0       	ldi	r22, 0x01	; 1
    2ac2:	ce 01       	movw	r24, r28
    2ac4:	01 96       	adiw	r24, 0x01	; 1
    2ac6:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2aca:	81 2f       	mov	r24, r17
    2acc:	88 63       	ori	r24, 0x38	; 56
    2ace:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2ad2:	8a e3       	ldi	r24, 0x3A	; 58
    2ad4:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2ad8:	82 e0       	ldi	r24, 0x02	; 2
    2ada:	89 83       	std	Y+1, r24	; 0x01
    2adc:	61 e0       	ldi	r22, 0x01	; 1
    2ade:	ce 01       	movw	r24, r28
    2ae0:	01 96       	adiw	r24, 0x01	; 1
    2ae2:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2ae6:	86 e3       	ldi	r24, 0x36	; 54
    2ae8:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2aec:	19 82       	std	Y+1, r1	; 0x01
    2aee:	61 e0       	ldi	r22, 0x01	; 1
    2af0:	ce 01       	movw	r24, r28
    2af2:	01 96       	adiw	r24, 0x01	; 1
    2af4:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2af8:	80 eb       	ldi	r24, 0xB0	; 176
    2afa:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2afe:	8f e9       	ldi	r24, 0x9F	; 159
    2b00:	89 83       	std	Y+1, r24	; 0x01
    2b02:	61 e0       	ldi	r22, 0x01	; 1
    2b04:	ce 01       	movw	r24, r28
    2b06:	01 96       	adiw	r24, 0x01	; 1
    2b08:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2b0c:	81 2f       	mov	r24, r17
    2b0e:	80 6f       	ori	r24, 0xF0	; 240
    2b10:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2b14:	82 e1       	ldi	r24, 0x12	; 18
    2b16:	89 83       	std	Y+1, r24	; 0x01
    2b18:	8b 83       	std	Y+3, r24	; 0x03
    2b1a:	8c 83       	std	Y+4, r24	; 0x04
    2b1c:	8d 83       	std	Y+5, r24	; 0x05
    2b1e:	64 e0       	ldi	r22, 0x04	; 4
    2b20:	ce 01       	movw	r24, r28
    2b22:	01 96       	adiw	r24, 0x01	; 1
    2b24:	0e 94 1b 14 	call	0x2836	; 0x2836 <ST7586_data>
    2b28:	80 e2       	ldi	r24, 0x20	; 32
    2b2a:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2b2e:	89 e2       	ldi	r24, 0x29	; 41
    2b30:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
    2b34:	80 e0       	ldi	r24, 0x00	; 0
    2b36:	0e 94 a9 14 	call	0x2952	; 0x2952 <ST7586_fill>
    2b3a:	24 96       	adiw	r28, 0x04	; 4
    2b3c:	cd bf       	out	0x3d, r28	; 61
    2b3e:	de bf       	out	0x3e, r29	; 62
    2b40:	df 91       	pop	r29
    2b42:	cf 91       	pop	r28
    2b44:	1f 91       	pop	r17
    2b46:	0f 91       	pop	r16
    2b48:	08 95       	ret

00002b4a <TCA0_PWM_init>:
void TCA0_PWM_init(void)
{
	//sei();
	/*		FIRST PWM on PA0 PIN		*/
	// Direction set and set output to high
	PORTA.DIR |= (1 << 0);
    2b4a:	a0 e0       	ldi	r26, 0x00	; 0
    2b4c:	b4 e0       	ldi	r27, 0x04	; 4
    2b4e:	8c 91       	ld	r24, X
    2b50:	81 60       	ori	r24, 0x01	; 1
    2b52:	8c 93       	st	X, r24
	PORTA.PIN0CTRL |= (1 << 3);
    2b54:	50 96       	adiw	r26, 0x10	; 16
    2b56:	8c 91       	ld	r24, X
    2b58:	50 97       	sbiw	r26, 0x10	; 16
    2b5a:	88 60       	ori	r24, 0x08	; 8
    2b5c:	50 96       	adiw	r26, 0x10	; 16
    2b5e:	8c 93       	st	X, r24
    2b60:	50 97       	sbiw	r26, 0x10	; 16
	
	//PORTA.OUTSET |= (1 << 0);
	TCA0.SINGLE.PER = 3000;     // calculation for 1ms
    2b62:	e0 e0       	ldi	r30, 0x00	; 0
    2b64:	fa e0       	ldi	r31, 0x0A	; 10
    2b66:	88 eb       	ldi	r24, 0xB8	; 184
    2b68:	9b e0       	ldi	r25, 0x0B	; 11
    2b6a:	86 a3       	std	Z+38, r24	; 0x26
    2b6c:	97 a3       	std	Z+39, r25	; 0x27
	TCA0.SINGLE.CMP0 = dutyCycle1;
    2b6e:	80 91 05 40 	lds	r24, 0x4005	; 0x804005 <dutyCycle1>
    2b72:	90 91 06 40 	lds	r25, 0x4006	; 0x804006 <dutyCycle1+0x1>
    2b76:	80 a7       	std	Z+40, r24	; 0x28
    2b78:	91 a7       	std	Z+41, r25	; 0x29
	TCA0.SINGLE.CNT = 0;
    2b7a:	10 a2       	std	Z+32, r1	; 0x20
    2b7c:	11 a2       	std	Z+33, r1	; 0x21

	
	TCA0.SINGLE.CTRLB |= (1 << 4); // compare 0 enable
    2b7e:	81 81       	ldd	r24, Z+1	; 0x01
    2b80:	80 61       	ori	r24, 0x10	; 16
    2b82:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.CTRLB |= (0x3 << 0); // Single slope PWM
    2b84:	81 81       	ldd	r24, Z+1	; 0x01
    2b86:	83 60       	ori	r24, 0x03	; 3
    2b88:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.CTRLA |= (1<<0); //fclk_per 1 and  Enable pwm
    2b8a:	80 81       	ld	r24, Z
    2b8c:	81 60       	ori	r24, 0x01	; 1
    2b8e:	80 83       	st	Z, r24
	TCA0.SINGLE.CTRLA |= ((1<<1)|(1<<2)); //fclk_per 8 and  Enable pwm
    2b90:	80 81       	ld	r24, Z
    2b92:	86 60       	ori	r24, 0x06	; 6
    2b94:	80 83       	st	Z, r24
	
	/*		Second PWM on PA1 PIN		*/
	
	PORTA.DIR |= (1 << 1);						// Direction set and set output to high
    2b96:	8c 91       	ld	r24, X
    2b98:	82 60       	ori	r24, 0x02	; 2
    2b9a:	8c 93       	st	X, r24
	PORTA.PIN1CTRL |= (1 << 3);
    2b9c:	51 96       	adiw	r26, 0x11	; 17
    2b9e:	8c 91       	ld	r24, X
    2ba0:	51 97       	sbiw	r26, 0x11	; 17
    2ba2:	88 60       	ori	r24, 0x08	; 8
    2ba4:	51 96       	adiw	r26, 0x11	; 17
    2ba6:	8c 93       	st	X, r24
	TCA0.SINGLE.CTRLB |= (1 << 5);				// Enable Compare Pa1
    2ba8:	81 81       	ldd	r24, Z+1	; 0x01
    2baa:	80 62       	ori	r24, 0x20	; 32
    2bac:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.CTRLA |= (1 << 1);				// Enable PWM PA1
    2bae:	80 81       	ld	r24, Z
    2bb0:	82 60       	ori	r24, 0x02	; 2
    2bb2:	80 83       	st	Z, r24
	TCA0.SINGLE.CMP1 = dutyCycle2;					// Duty cycle
    2bb4:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <dutyCycle2>
    2bb8:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <dutyCycle2+0x1>
    2bbc:	82 a7       	std	Z+42, r24	; 0x2a
    2bbe:	93 a7       	std	Z+43, r25	; 0x2b
    2bc0:	08 95       	ret

00002bc2 <ST7586_send_data>:
	ST7586_send_data(_data, array_length);
	//	USART1_sendString("set pixel");
}

void ST7586_send_data(uint8_t data[], uint8_t dataSize)
{
    2bc2:	0f 93       	push	r16
    2bc4:	1f 93       	push	r17
    2bc6:	cf 93       	push	r28
    2bc8:	df 93       	push	r29
    2bca:	8c 01       	movw	r16, r24
    2bcc:	d6 2f       	mov	r29, r22
	
	ST7586_CSLOW();
    2bce:	e4 e0       	ldi	r30, 0x04	; 4
    2bd0:	f4 e0       	ldi	r31, 0x04	; 4
    2bd2:	80 81       	ld	r24, Z
    2bd4:	8f 77       	andi	r24, 0x7F	; 127
    2bd6:	80 83       	st	Z, r24
	for (uint8_t i = 0; i < dataSize; i++)
    2bd8:	c0 e0       	ldi	r28, 0x00	; 0
    2bda:	07 c0       	rjmp	.+14     	; 0x2bea <ST7586_send_data+0x28>
	{
		ST7586_SERIALW(data[i]);
    2bdc:	f8 01       	movw	r30, r16
    2bde:	ec 0f       	add	r30, r28
    2be0:	f1 1d       	adc	r31, r1
    2be2:	80 81       	ld	r24, Z
    2be4:	0e 94 1a 13 	call	0x2634	; 0x2634 <SPI_0_send_char>

void ST7586_send_data(uint8_t data[], uint8_t dataSize)
{
	
	ST7586_CSLOW();
	for (uint8_t i = 0; i < dataSize; i++)
    2be8:	cf 5f       	subi	r28, 0xFF	; 255
    2bea:	cd 17       	cp	r28, r29
    2bec:	b8 f3       	brcs	.-18     	; 0x2bdc <ST7586_send_data+0x1a>
	{
		ST7586_SERIALW(data[i]);
	}
	ST7586_CSHIGH();
    2bee:	e4 e0       	ldi	r30, 0x04	; 4
    2bf0:	f4 e0       	ldi	r31, 0x04	; 4
    2bf2:	80 81       	ld	r24, Z
    2bf4:	80 68       	ori	r24, 0x80	; 128
    2bf6:	80 83       	st	Z, r24
}
    2bf8:	df 91       	pop	r29
    2bfa:	cf 91       	pop	r28
    2bfc:	1f 91       	pop	r17
    2bfe:	0f 91       	pop	r16
    2c00:	08 95       	ret

00002c02 <__set_pixel>:
	TCA0.SINGLE.CMP1 = dutyCycle2;					// Duty cycle

}

void __set_pixel (int x1, int y1, int x2, bool color, uint8_t _data[], int array_length)		// with x2,y2 will not be limited as it is not creating any hindrence
{
    2c02:	af 92       	push	r10
    2c04:	bf 92       	push	r11
    2c06:	cf 92       	push	r12
    2c08:	df 92       	push	r13
    2c0a:	ef 92       	push	r14
    2c0c:	ff 92       	push	r15
    2c0e:	0f 93       	push	r16
    2c10:	1f 93       	push	r17
    2c12:	cf 93       	push	r28
    2c14:	df 93       	push	r29
    2c16:	00 d0       	rcall	.+0      	; 0x2c18 <__set_pixel+0x16>
    2c18:	00 d0       	rcall	.+0      	; 0x2c1a <__set_pixel+0x18>
    2c1a:	cd b7       	in	r28, 0x3d	; 61
    2c1c:	de b7       	in	r29, 0x3e	; 62
    2c1e:	5c 01       	movw	r10, r24
    2c20:	f6 2e       	mov	r15, r22
    2c22:	6a 01       	movw	r12, r20
	uint8_t tempArgs[4];
	//uint8_t _data[3] = {0xC0, 0xF2, 0xDC};
	ST7586_cmd(SETCOLUMNADDRESS);	// Set Column Address
    2c24:	8a e2       	ldi	r24, 0x2A	; 42
    2c26:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	// Stupid display addressing. Why requiring two bytes, when the max value is 127 for columns / 160 for rows???
	tempArgs[0] = 0;
    2c2a:	19 82       	std	Y+1, r1	; 0x01
	tempArgs[1] = x1/3;
    2c2c:	23 e0       	ldi	r18, 0x03	; 3
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	c5 01       	movw	r24, r10
    2c32:	b9 01       	movw	r22, r18
    2c34:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
    2c38:	6a 83       	std	Y+2, r22	; 0x02
	tempArgs[2] = 0;
    2c3a:	1b 82       	std	Y+3, r1	; 0x03
	tempArgs[3] = x2/3;
    2c3c:	c6 01       	movw	r24, r12
    2c3e:	b9 01       	movw	r22, r18
    2c40:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
    2c44:	6c 83       	std	Y+4, r22	; 0x04
	ST7586_send_data(tempArgs, 4);
    2c46:	64 e0       	ldi	r22, 0x04	; 4
    2c48:	ce 01       	movw	r24, r28
    2c4a:	01 96       	adiw	r24, 0x01	; 1
    2c4c:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	ST7586_cmd(SETROWADDRESS);		// Set Row Address
    2c50:	8b e2       	ldi	r24, 0x2B	; 43
    2c52:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	tempArgs[0] = 0;
    2c56:	19 82       	std	Y+1, r1	; 0x01
	tempArgs[1] = y1;
    2c58:	fa 82       	std	Y+2, r15	; 0x02
	tempArgs[2] = 0;
    2c5a:	1b 82       	std	Y+3, r1	; 0x03
	tempArgs[3] = 159;
    2c5c:	8f e9       	ldi	r24, 0x9F	; 159
    2c5e:	8c 83       	std	Y+4, r24	; 0x04
	ST7586_send_data(tempArgs, 4);
    2c60:	64 e0       	ldi	r22, 0x04	; 4
    2c62:	ce 01       	movw	r24, r28
    2c64:	01 96       	adiw	r24, 0x01	; 1
    2c66:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	ST7586_cmd(WRITEDISPLAYDATA);
    2c6a:	8c e2       	ldi	r24, 0x2C	; 44
    2c6c:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	ST7586_send_data(_data, array_length);
    2c70:	6e 2d       	mov	r22, r14
    2c72:	c8 01       	movw	r24, r16
    2c74:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	//	USART1_sendString("set pixel");
}
    2c78:	24 96       	adiw	r28, 0x04	; 4
    2c7a:	cd bf       	out	0x3d, r28	; 61
    2c7c:	de bf       	out	0x3e, r29	; 62
    2c7e:	df 91       	pop	r29
    2c80:	cf 91       	pop	r28
    2c82:	1f 91       	pop	r17
    2c84:	0f 91       	pop	r16
    2c86:	ff 90       	pop	r15
    2c88:	ef 90       	pop	r14
    2c8a:	df 90       	pop	r13
    2c8c:	cf 90       	pop	r12
    2c8e:	bf 90       	pop	r11
    2c90:	af 90       	pop	r10
    2c92:	08 95       	ret

00002c94 <_print_icon>:
		ST7586_SERIALW(data[i]);
	}
	ST7586_CSHIGH();
}
void _print_icon(int x1, int y1, int x2, uint8_t *font, uint8_t height , uint8_t width)		//function to print array of uint_8 of any no. of elements, by giving x1,y1,x2,y2
{																							//width should be a multiple of 8 and the icon should also be generated with the width as multiple of 8(GLCD fount creator) but this length could be limited my reducing the x2 as the multiple of 3
    2c94:	2f 92       	push	r2
    2c96:	3f 92       	push	r3
    2c98:	4f 92       	push	r4
    2c9a:	5f 92       	push	r5
    2c9c:	6f 92       	push	r6
    2c9e:	7f 92       	push	r7
    2ca0:	8f 92       	push	r8
    2ca2:	9f 92       	push	r9
    2ca4:	af 92       	push	r10
    2ca6:	bf 92       	push	r11
    2ca8:	cf 92       	push	r12
    2caa:	df 92       	push	r13
    2cac:	ef 92       	push	r14
    2cae:	ff 92       	push	r15
    2cb0:	0f 93       	push	r16
    2cb2:	1f 93       	push	r17
    2cb4:	cf 93       	push	r28
    2cb6:	df 93       	push	r29
    2cb8:	cd b7       	in	r28, 0x3d	; 61
    2cba:	de b7       	in	r29, 0x3e	; 62
    2cbc:	28 97       	sbiw	r28, 0x08	; 8
    2cbe:	cd bf       	out	0x3d, r28	; 61
    2cc0:	de bf       	out	0x3e, r29	; 62
    2cc2:	89 83       	std	Y+1, r24	; 0x01
    2cc4:	9a 83       	std	Y+2, r25	; 0x02
    2cc6:	4b 83       	std	Y+3, r20	; 0x03
    2cc8:	5c 83       	std	Y+4, r21	; 0x04
    2cca:	39 01       	movw	r6, r18
			}
		}
		__set_pixel(x1, (_length+y1), x2, 1, &_buff[0], buff_length);
		i=0;
	}
}
    2ccc:	8d b7       	in	r24, 0x3d	; 61
    2cce:	9e b7       	in	r25, 0x3e	; 62
    2cd0:	8f 83       	std	Y+7, r24	; 0x07
    2cd2:	98 87       	std	Y+8, r25	; 0x08
	}
	ST7586_CSHIGH();
}
void _print_icon(int x1, int y1, int x2, uint8_t *font, uint8_t height , uint8_t width)		//function to print array of uint_8 of any no. of elements, by giving x1,y1,x2,y2
{																							//width should be a multiple of 8 and the icon should also be generated with the width as multiple of 8(GLCD fount creator) but this length could be limited my reducing the x2 as the multiple of 3
	int new_pos = 0, buff_length = (width*3);
    2cd4:	8e 2d       	mov	r24, r14
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	2c 01       	movw	r4, r24
    2cda:	44 0c       	add	r4, r4
    2cdc:	55 1c       	adc	r5, r5
    2cde:	48 0e       	add	r4, r24
    2ce0:	59 1e       	adc	r5, r25
	uint8_t array_data = 0;

	for(int _length = 0; _length < height; _length++)
    2ce2:	21 2c       	mov	r2, r1
    2ce4:	31 2c       	mov	r3, r1
	}
	ST7586_CSHIGH();
}
void _print_icon(int x1, int y1, int x2, uint8_t *font, uint8_t height , uint8_t width)		//function to print array of uint_8 of any no. of elements, by giving x1,y1,x2,y2
{																							//width should be a multiple of 8 and the icon should also be generated with the width as multiple of 8(GLCD fount creator) but this length could be limited my reducing the x2 as the multiple of 3
	int new_pos = 0, buff_length = (width*3);
    2ce6:	c1 2c       	mov	r12, r1
    2ce8:	d1 2c       	mov	r13, r1
    2cea:	6d 83       	std	Y+5, r22	; 0x05
    2cec:	7e 83       	std	Y+6, r23	; 0x06
    2cee:	a0 2e       	mov	r10, r16
    2cf0:	be 2c       	mov	r11, r14
	uint8_t array_data = 0;

	for(int _length = 0; _length < height; _length++)
    2cf2:	5f c0       	rjmp	.+190    	; 0x2db2 <_print_icon+0x11e>
	{
    2cf4:	8d b6       	in	r8, 0x3d	; 61
    2cf6:	9e b6       	in	r9, 0x3e	; 62
		uint8_t _buff[buff_length];
    2cf8:	8d b7       	in	r24, 0x3d	; 61
    2cfa:	9e b7       	in	r25, 0x3e	; 62
    2cfc:	84 19       	sub	r24, r4
    2cfe:	95 09       	sbc	r25, r5
    2d00:	8d bf       	out	0x3d, r24	; 61
    2d02:	9e bf       	out	0x3e, r25	; 62
    2d04:	0d b7       	in	r16, 0x3d	; 61
    2d06:	1e b7       	in	r17, 0x3e	; 62
    2d08:	0f 5f       	subi	r16, 0xFF	; 255
    2d0a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d0c:	98 01       	movw	r18, r16
		for (int i = 0; i < buff_length; i++)			// to make the buff initialize with 0
    2d0e:	80 e0       	ldi	r24, 0x00	; 0
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	05 c0       	rjmp	.+10     	; 0x2d1e <_print_icon+0x8a>
		{
			_buff[i] = 0x00;
    2d14:	f9 01       	movw	r30, r18
    2d16:	e8 0f       	add	r30, r24
    2d18:	f9 1f       	adc	r31, r25
    2d1a:	10 82       	st	Z, r1
	uint8_t array_data = 0;

	for(int _length = 0; _length < height; _length++)
	{
		uint8_t _buff[buff_length];
		for (int i = 0; i < buff_length; i++)			// to make the buff initialize with 0
    2d1c:	01 96       	adiw	r24, 0x01	; 1
    2d1e:	84 15       	cp	r24, r4
    2d20:	95 05       	cpc	r25, r5
    2d22:	c4 f3       	brlt	.-16     	; 0x2d14 <_print_icon+0x80>
    2d24:	40 e0       	ldi	r20, 0x00	; 0
    2d26:	50 e0       	ldi	r21, 0x00	; 0
    2d28:	60 e0       	ldi	r22, 0x00	; 0
    2d2a:	70 e0       	ldi	r23, 0x00	; 0
    2d2c:	29 c0       	rjmp	.+82     	; 0x2d80 <_print_icon+0xec>
			_buff[i] = 0x00;
		}
		uint8_t i = 0, k = 0;
		for(int _width = 0; _width < (width/8); _width++)
		{
			array_data = pgm_read_byte(&(font[new_pos]));
    2d2e:	f3 01       	movw	r30, r6
    2d30:	ec 0d       	add	r30, r12
    2d32:	fd 1d       	adc	r31, r13
    2d34:	e4 90       	lpm	r14, Z
			new_pos++;
    2d36:	9f ef       	ldi	r25, 0xFF	; 255
    2d38:	c9 1a       	sub	r12, r25
    2d3a:	d9 0a       	sbc	r13, r25
			for (int j = 7; j >= 0; j--)
    2d3c:	87 e0       	ldi	r24, 0x07	; 7
    2d3e:	90 e0       	ldi	r25, 0x00	; 0
    2d40:	1b c0       	rjmp	.+54     	; 0x2d78 <_print_icon+0xe4>
			{
				if (array_data & (1<<j))
    2d42:	ee 2d       	mov	r30, r14
    2d44:	f0 e0       	ldi	r31, 0x00	; 0
    2d46:	08 2e       	mov	r0, r24
    2d48:	02 c0       	rjmp	.+4      	; 0x2d4e <_print_icon+0xba>
    2d4a:	f5 95       	asr	r31
    2d4c:	e7 95       	ror	r30
    2d4e:	0a 94       	dec	r0
    2d50:	e2 f7       	brpl	.-8      	; 0x2d4a <_print_icon+0xb6>
    2d52:	e0 ff       	sbrs	r30, 0
    2d54:	0b c0       	rjmp	.+22     	; 0x2d6c <_print_icon+0xd8>
				{
					_buff[i] = _buff[i] | pre_def[k];
    2d56:	d9 01       	movw	r26, r18
    2d58:	a7 0f       	add	r26, r23
    2d5a:	b1 1d       	adc	r27, r1
    2d5c:	fc 90       	ld	r15, X
    2d5e:	e6 2f       	mov	r30, r22
    2d60:	f0 e0       	ldi	r31, 0x00	; 0
    2d62:	e0 50       	subi	r30, 0x00	; 0
    2d64:	f0 4c       	sbci	r31, 0xC0	; 192
    2d66:	e0 81       	ld	r30, Z
    2d68:	ef 29       	or	r30, r15
    2d6a:	ec 93       	st	X, r30
				}
				if(++k > 2)
    2d6c:	6f 5f       	subi	r22, 0xFF	; 255
    2d6e:	63 30       	cpi	r22, 0x03	; 3
    2d70:	10 f0       	brcs	.+4      	; 0x2d76 <_print_icon+0xe2>
				{
					k = 0;
					i++;
    2d72:	7f 5f       	subi	r23, 0xFF	; 255
				{
					_buff[i] = _buff[i] | pre_def[k];
				}
				if(++k > 2)
				{
					k = 0;
    2d74:	60 e0       	ldi	r22, 0x00	; 0
		uint8_t i = 0, k = 0;
		for(int _width = 0; _width < (width/8); _width++)
		{
			array_data = pgm_read_byte(&(font[new_pos]));
			new_pos++;
			for (int j = 7; j >= 0; j--)
    2d76:	01 97       	sbiw	r24, 0x01	; 1
    2d78:	99 23       	and	r25, r25
    2d7a:	1c f7       	brge	.-58     	; 0x2d42 <_print_icon+0xae>
		for (int i = 0; i < buff_length; i++)			// to make the buff initialize with 0
		{
			_buff[i] = 0x00;
		}
		uint8_t i = 0, k = 0;
		for(int _width = 0; _width < (width/8); _width++)
    2d7c:	4f 5f       	subi	r20, 0xFF	; 255
    2d7e:	5f 4f       	sbci	r21, 0xFF	; 255
    2d80:	8b 2d       	mov	r24, r11
    2d82:	86 95       	lsr	r24
    2d84:	86 95       	lsr	r24
    2d86:	86 95       	lsr	r24
    2d88:	90 e0       	ldi	r25, 0x00	; 0
    2d8a:	48 17       	cp	r20, r24
    2d8c:	59 07       	cpc	r21, r25
    2d8e:	7c f2       	brlt	.-98     	; 0x2d2e <_print_icon+0x9a>
					k = 0;
					i++;
				}
			}
		}
		__set_pixel(x1, (_length+y1), x2, 1, &_buff[0], buff_length);
    2d90:	6d 81       	ldd	r22, Y+5	; 0x05
    2d92:	7e 81       	ldd	r23, Y+6	; 0x06
    2d94:	62 0d       	add	r22, r2
    2d96:	73 1d       	adc	r23, r3
    2d98:	72 01       	movw	r14, r4
    2d9a:	21 e0       	ldi	r18, 0x01	; 1
    2d9c:	4b 81       	ldd	r20, Y+3	; 0x03
    2d9e:	5c 81       	ldd	r21, Y+4	; 0x04
    2da0:	89 81       	ldd	r24, Y+1	; 0x01
    2da2:	9a 81       	ldd	r25, Y+2	; 0x02
    2da4:	0e 94 01 16 	call	0x2c02	; 0x2c02 <__set_pixel>
    2da8:	8d be       	out	0x3d, r8	; 61
    2daa:	9e be       	out	0x3e, r9	; 62
void _print_icon(int x1, int y1, int x2, uint8_t *font, uint8_t height , uint8_t width)		//function to print array of uint_8 of any no. of elements, by giving x1,y1,x2,y2
{																							//width should be a multiple of 8 and the icon should also be generated with the width as multiple of 8(GLCD fount creator) but this length could be limited my reducing the x2 as the multiple of 3
	int new_pos = 0, buff_length = (width*3);
	uint8_t array_data = 0;

	for(int _length = 0; _length < height; _length++)
    2dac:	8f ef       	ldi	r24, 0xFF	; 255
    2dae:	28 1a       	sub	r2, r24
    2db0:	38 0a       	sbc	r3, r24
    2db2:	8a 2d       	mov	r24, r10
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	28 16       	cp	r2, r24
    2db8:	39 06       	cpc	r3, r25
    2dba:	0c f4       	brge	.+2      	; 0x2dbe <_print_icon+0x12a>
    2dbc:	9b cf       	rjmp	.-202    	; 0x2cf4 <_print_icon+0x60>
			}
		}
		__set_pixel(x1, (_length+y1), x2, 1, &_buff[0], buff_length);
		i=0;
	}
}
    2dbe:	8f 81       	ldd	r24, Y+7	; 0x07
    2dc0:	98 85       	ldd	r25, Y+8	; 0x08
    2dc2:	8d bf       	out	0x3d, r24	; 61
    2dc4:	9e bf       	out	0x3e, r25	; 62
    2dc6:	28 96       	adiw	r28, 0x08	; 8
    2dc8:	cd bf       	out	0x3d, r28	; 61
    2dca:	de bf       	out	0x3e, r29	; 62
    2dcc:	df 91       	pop	r29
    2dce:	cf 91       	pop	r28
    2dd0:	1f 91       	pop	r17
    2dd2:	0f 91       	pop	r16
    2dd4:	ff 90       	pop	r15
    2dd6:	ef 90       	pop	r14
    2dd8:	df 90       	pop	r13
    2dda:	cf 90       	pop	r12
    2ddc:	bf 90       	pop	r11
    2dde:	af 90       	pop	r10
    2de0:	9f 90       	pop	r9
    2de2:	8f 90       	pop	r8
    2de4:	7f 90       	pop	r7
    2de6:	6f 90       	pop	r6
    2de8:	5f 90       	pop	r5
    2dea:	4f 90       	pop	r4
    2dec:	3f 90       	pop	r3
    2dee:	2f 90       	pop	r2
    2df0:	08 95       	ret

00002df2 <_set_pixel>:
		i=0;
	}

}
void _set_pixel (int x, int y, bool color, uint8_t _data[], int array_length)
{
    2df2:	cf 92       	push	r12
    2df4:	df 92       	push	r13
    2df6:	ef 92       	push	r14
    2df8:	ff 92       	push	r15
    2dfa:	0f 93       	push	r16
    2dfc:	1f 93       	push	r17
    2dfe:	cf 93       	push	r28
    2e00:	df 93       	push	r29
    2e02:	00 d0       	rcall	.+0      	; 0x2e04 <_set_pixel+0x12>
    2e04:	00 d0       	rcall	.+0      	; 0x2e06 <_set_pixel+0x14>
    2e06:	cd b7       	in	r28, 0x3d	; 61
    2e08:	de b7       	in	r29, 0x3e	; 62
    2e0a:	6c 01       	movw	r12, r24
    2e0c:	16 2f       	mov	r17, r22
    2e0e:	79 01       	movw	r14, r18
	uint8_t tempArgs[4];
	//uint8_t _data[3] = {0xC0, 0xF2, 0xDC};
	ST7586_cmd(SETCOLUMNADDRESS);	// Set Column Address
    2e10:	8a e2       	ldi	r24, 0x2A	; 42
    2e12:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	// Stupid display addressing. Why requiring two bytes, when the max value is 127 for columns / 160 for rows???
	tempArgs[0] = 0;
    2e16:	19 82       	std	Y+1, r1	; 0x01
	tempArgs[1] = x/3;
    2e18:	c6 01       	movw	r24, r12
    2e1a:	63 e0       	ldi	r22, 0x03	; 3
    2e1c:	70 e0       	ldi	r23, 0x00	; 0
    2e1e:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
    2e22:	6a 83       	std	Y+2, r22	; 0x02
	tempArgs[2] = 0;
    2e24:	1b 82       	std	Y+3, r1	; 0x03
	tempArgs[3] = 128;
    2e26:	80 e8       	ldi	r24, 0x80	; 128
    2e28:	8c 83       	std	Y+4, r24	; 0x04
	ST7586_send_data(tempArgs, 4);
    2e2a:	64 e0       	ldi	r22, 0x04	; 4
    2e2c:	ce 01       	movw	r24, r28
    2e2e:	01 96       	adiw	r24, 0x01	; 1
    2e30:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	ST7586_cmd(SETROWADDRESS);		// Set Row Address
    2e34:	8b e2       	ldi	r24, 0x2B	; 43
    2e36:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	tempArgs[0] = 0;
    2e3a:	19 82       	std	Y+1, r1	; 0x01
	tempArgs[1] = y;
    2e3c:	1a 83       	std	Y+2, r17	; 0x02
	tempArgs[2] = 0;
    2e3e:	1b 82       	std	Y+3, r1	; 0x03
	tempArgs[3] = 159;
    2e40:	8f e9       	ldi	r24, 0x9F	; 159
    2e42:	8c 83       	std	Y+4, r24	; 0x04
	ST7586_send_data(tempArgs, 4);
    2e44:	64 e0       	ldi	r22, 0x04	; 4
    2e46:	ce 01       	movw	r24, r28
    2e48:	01 96       	adiw	r24, 0x01	; 1
    2e4a:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	ST7586_cmd(WRITEDISPLAYDATA);
    2e4e:	8c e2       	ldi	r24, 0x2C	; 44
    2e50:	0e 94 3b 14 	call	0x2876	; 0x2876 <ST7586_cmd>
	ST7586_send_data(_data, array_length);
    2e54:	60 2f       	mov	r22, r16
    2e56:	c7 01       	movw	r24, r14
    2e58:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <ST7586_send_data>
	//	USART1_sendString("set pixel");
    2e5c:	24 96       	adiw	r28, 0x04	; 4
    2e5e:	cd bf       	out	0x3d, r28	; 61
    2e60:	de bf       	out	0x3e, r29	; 62
    2e62:	df 91       	pop	r29
    2e64:	cf 91       	pop	r28
    2e66:	1f 91       	pop	r17
    2e68:	0f 91       	pop	r16
    2e6a:	ff 90       	pop	r15
    2e6c:	ef 90       	pop	r14
    2e6e:	df 90       	pop	r13
    2e70:	cf 90       	pop	r12
    2e72:	08 95       	ret

00002e74 <print_bool>:
	print_bool(x+27, y, digit_b);
	print_bool(x+54, y, digit_c);
	
}
void print_bool(int x, int y, int n)
{
    2e74:	5f 92       	push	r5
    2e76:	6f 92       	push	r6
    2e78:	7f 92       	push	r7
    2e7a:	8f 92       	push	r8
    2e7c:	9f 92       	push	r9
    2e7e:	af 92       	push	r10
    2e80:	bf 92       	push	r11
    2e82:	cf 92       	push	r12
    2e84:	df 92       	push	r13
    2e86:	ef 92       	push	r14
    2e88:	ff 92       	push	r15
    2e8a:	0f 93       	push	r16
    2e8c:	1f 93       	push	r17
    2e8e:	cf 93       	push	r28
    2e90:	df 93       	push	r29
    2e92:	cd b7       	in	r28, 0x3d	; 61
    2e94:	de b7       	in	r29, 0x3e	; 62
    2e96:	28 97       	sbiw	r28, 0x08	; 8
    2e98:	cd bf       	out	0x3d, r28	; 61
    2e9a:	de bf       	out	0x3e, r29	; 62
    2e9c:	3c 01       	movw	r6, r24
    2e9e:	4b 01       	movw	r8, r22
    2ea0:	6a 01       	movw	r12, r20
	uint8_t height = 36, width = 24;
	int new_pos = 0;
	bool array_data = false;
	uint8_t i = 0, k = 0;

	for(int _length = 0; _length < height; _length++)
    2ea2:	a1 2c       	mov	r10, r1
    2ea4:	b1 2c       	mov	r11, r1
void print_bool(int x, int y, int n)
{
	uint8_t height = 36, width = 24;
	int new_pos = 0;
	bool array_data = false;
	uint8_t i = 0, k = 0;
    2ea6:	51 2c       	mov	r5, r1
	
}
void print_bool(int x, int y, int n)
{
	uint8_t height = 36, width = 24;
	int new_pos = 0;
    2ea8:	e1 2c       	mov	r14, r1
    2eaa:	f1 2c       	mov	r15, r1
	bool array_data = false;
	uint8_t i = 0, k = 0;

	for(int _length = 0; _length < height; _length++)
    2eac:	46 c0       	rjmp	.+140    	; 0x2f3a <print_bool+0xc6>
	{
		// 			USART1_sendString("length");
		// 			USART1_sendInt(_length);
		uint8_t _buff[8] = {0};
    2eae:	fe 01       	movw	r30, r28
    2eb0:	31 96       	adiw	r30, 0x01	; 1
    2eb2:	88 e0       	ldi	r24, 0x08	; 8
    2eb4:	df 01       	movw	r26, r30
    2eb6:	1d 92       	st	X+, r1
    2eb8:	8a 95       	dec	r24
    2eba:	e9 f7       	brne	.-6      	; 0x2eb6 <print_bool+0x42>
		for(int _width = 0; _width < width; _width++)
    2ebc:	80 e0       	ldi	r24, 0x00	; 0
    2ebe:	90 e0       	ldi	r25, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	28 c0       	rjmp	.+80     	; 0x2f14 <print_bool+0xa0>
			// 				USART1_sendString("width");
			// 				USART1_sendInt(_width);
			// 				USART1_sendString("pos");
			// 				USART1_sendInt(new_pos);
			
			array_data = pgm_read_byte(&(system24x36[n][new_pos]));
    2ec4:	40 e6       	ldi	r20, 0x60	; 96
    2ec6:	53 e0       	ldi	r21, 0x03	; 3
    2ec8:	c4 9e       	mul	r12, r20
    2eca:	f0 01       	movw	r30, r0
    2ecc:	c5 9e       	mul	r12, r21
    2ece:	f0 0d       	add	r31, r0
    2ed0:	d4 9e       	mul	r13, r20
    2ed2:	f0 0d       	add	r31, r0
    2ed4:	11 24       	eor	r1, r1
    2ed6:	ee 0d       	add	r30, r14
    2ed8:	ff 1d       	adc	r31, r15
    2eda:	ea 55       	subi	r30, 0x5A	; 90
    2edc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ede:	e4 91       	lpm	r30, Z
			new_pos++;
    2ee0:	bf ef       	ldi	r27, 0xFF	; 255
    2ee2:	eb 1a       	sub	r14, r27
    2ee4:	fb 0a       	sbc	r15, r27
			// 				USART1_sendString("data");
			// 				USART1_sendInt(array_data);
			if (array_data)
    2ee6:	ee 23       	and	r30, r30
    2ee8:	71 f0       	breq	.+28     	; 0x2f06 <print_bool+0x92>
			{
				_buff[i] = _buff[i] | pre_def[k];
    2eea:	e1 e0       	ldi	r30, 0x01	; 1
    2eec:	f0 e0       	ldi	r31, 0x00	; 0
    2eee:	ec 0f       	add	r30, r28
    2ef0:	fd 1f       	adc	r31, r29
    2ef2:	e3 0f       	add	r30, r19
    2ef4:	f1 1d       	adc	r31, r1
    2ef6:	40 81       	ld	r20, Z
    2ef8:	a5 2d       	mov	r26, r5
    2efa:	b0 e0       	ldi	r27, 0x00	; 0
    2efc:	a0 50       	subi	r26, 0x00	; 0
    2efe:	b0 4c       	sbci	r27, 0xC0	; 192
    2f00:	2c 91       	ld	r18, X
    2f02:	24 2b       	or	r18, r20
    2f04:	20 83       	st	Z, r18
				// 					USART1_sendString("buff");
				// 					USART1_sendInt(_buff[i]);
			}
			if(++k > 2)
    2f06:	53 94       	inc	r5
    2f08:	22 e0       	ldi	r18, 0x02	; 2
    2f0a:	25 15       	cp	r18, r5
    2f0c:	10 f4       	brcc	.+4      	; 0x2f12 <print_bool+0x9e>
			{
				k = 0;
				i++;
    2f0e:	3f 5f       	subi	r19, 0xFF	; 255
				// 					USART1_sendString("buff");
				// 					USART1_sendInt(_buff[i]);
			}
			if(++k > 2)
			{
				k = 0;
    2f10:	51 2c       	mov	r5, r1
	for(int _length = 0; _length < height; _length++)
	{
		// 			USART1_sendString("length");
		// 			USART1_sendInt(_length);
		uint8_t _buff[8] = {0};
		for(int _width = 0; _width < width; _width++)
    2f12:	01 96       	adiw	r24, 0x01	; 1
    2f14:	88 31       	cpi	r24, 0x18	; 24
    2f16:	91 05       	cpc	r25, r1
    2f18:	ac f2       	brlt	.-86     	; 0x2ec4 <print_bool+0x50>
				i++;
			}

		}
		
		_set_pixel(x, (_length+y) , 1, &_buff[0], 8);
    2f1a:	b5 01       	movw	r22, r10
    2f1c:	68 0d       	add	r22, r8
    2f1e:	79 1d       	adc	r23, r9
    2f20:	08 e0       	ldi	r16, 0x08	; 8
    2f22:	10 e0       	ldi	r17, 0x00	; 0
    2f24:	9e 01       	movw	r18, r28
    2f26:	2f 5f       	subi	r18, 0xFF	; 255
    2f28:	3f 4f       	sbci	r19, 0xFF	; 255
    2f2a:	41 e0       	ldi	r20, 0x01	; 1
    2f2c:	50 e0       	ldi	r21, 0x00	; 0
    2f2e:	c3 01       	movw	r24, r6
    2f30:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <_set_pixel>
	uint8_t height = 36, width = 24;
	int new_pos = 0;
	bool array_data = false;
	uint8_t i = 0, k = 0;

	for(int _length = 0; _length < height; _length++)
    2f34:	8f ef       	ldi	r24, 0xFF	; 255
    2f36:	a8 1a       	sub	r10, r24
    2f38:	b8 0a       	sbc	r11, r24
    2f3a:	a4 e2       	ldi	r26, 0x24	; 36
    2f3c:	aa 16       	cp	r10, r26
    2f3e:	b1 04       	cpc	r11, r1
    2f40:	0c f4       	brge	.+2      	; 0x2f44 <print_bool+0xd0>
    2f42:	b5 cf       	rjmp	.-150    	; 0x2eae <print_bool+0x3a>
		
		_set_pixel(x, (_length+y) , 1, &_buff[0], 8);
		i=0;
	}

}
    2f44:	28 96       	adiw	r28, 0x08	; 8
    2f46:	cd bf       	out	0x3d, r28	; 61
    2f48:	de bf       	out	0x3e, r29	; 62
    2f4a:	df 91       	pop	r29
    2f4c:	cf 91       	pop	r28
    2f4e:	1f 91       	pop	r17
    2f50:	0f 91       	pop	r16
    2f52:	ff 90       	pop	r15
    2f54:	ef 90       	pop	r14
    2f56:	df 90       	pop	r13
    2f58:	cf 90       	pop	r12
    2f5a:	bf 90       	pop	r11
    2f5c:	af 90       	pop	r10
    2f5e:	9f 90       	pop	r9
    2f60:	8f 90       	pop	r8
    2f62:	7f 90       	pop	r7
    2f64:	6f 90       	pop	r6
    2f66:	5f 90       	pop	r5
    2f68:	08 95       	ret

00002f6a <show_mmgh_3digit>:
		i=0;
	}
}

void show_mmgh_3digit (int x, int y)
{
    2f6a:	af 92       	push	r10
    2f6c:	bf 92       	push	r11
    2f6e:	cf 92       	push	r12
    2f70:	df 92       	push	r13
    2f72:	ef 92       	push	r14
    2f74:	ff 92       	push	r15
    2f76:	0f 93       	push	r16
    2f78:	1f 93       	push	r17
    2f7a:	cf 93       	push	r28
    2f7c:	df 93       	push	r29
    2f7e:	8c 01       	movw	r16, r24
    2f80:	7b 01       	movw	r14, r22
	int buff =(int)final_pressure;
    2f82:	60 91 b6 40 	lds	r22, 0x40B6	; 0x8040b6 <__data_end>
    2f86:	70 91 b7 40 	lds	r23, 0x40B7	; 0x8040b7 <__data_end+0x1>
    2f8a:	80 91 b8 40 	lds	r24, 0x40B8	; 0x8040b8 <__data_end+0x2>
    2f8e:	90 91 b9 40 	lds	r25, 0x40B9	; 0x8040b9 <__data_end+0x3>
    2f92:	0e 94 76 19 	call	0x32ec	; 0x32ec <__fixsfsi>
    2f96:	eb 01       	movw	r28, r22
	uint8_t digit = 0, digit_a = 0, digit_b = 0, digit_c = 0;
	if (buff > 999)
    2f98:	c8 3e       	cpi	r28, 0xE8	; 232
    2f9a:	83 e0       	ldi	r24, 0x03	; 3
    2f9c:	d8 07       	cpc	r29, r24
    2f9e:	64 f0       	brlt	.+24     	; 0x2fb8 <show_mmgh_3digit+0x4e>
	{
		USART1_sendString("pressure digit overflow!!");
    2fa0:	8b e9       	ldi	r24, 0x9B	; 155
    2fa2:	90 e4       	ldi	r25, 0x40	; 64
    2fa4:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <USART1_sendString>
		final_pressure = 0;
    2fa8:	10 92 b6 40 	sts	0x40B6, r1	; 0x8040b6 <__data_end>
    2fac:	10 92 b7 40 	sts	0x40B7, r1	; 0x8040b7 <__data_end+0x1>
    2fb0:	10 92 b8 40 	sts	0x40B8, r1	; 0x8040b8 <__data_end+0x2>
    2fb4:	10 92 b9 40 	sts	0x40B9, r1	; 0x8040b9 <__data_end+0x3>
	}
	digit_c = buff%10;
    2fb8:	2a e0       	ldi	r18, 0x0A	; 10
    2fba:	30 e0       	ldi	r19, 0x00	; 0
    2fbc:	ce 01       	movw	r24, r28
    2fbe:	b9 01       	movw	r22, r18
    2fc0:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
    2fc4:	6c 01       	movw	r12, r24
	buff = buff/ 10;
	digit_b = buff%10;
    2fc6:	cb 01       	movw	r24, r22
    2fc8:	b9 01       	movw	r22, r18
    2fca:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
    2fce:	5c 01       	movw	r10, r24
	digit_a = buff/10;
    2fd0:	ce 01       	movw	r24, r28
    2fd2:	64 e6       	ldi	r22, 0x64	; 100
    2fd4:	70 e0       	ldi	r23, 0x00	; 0
    2fd6:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__divmodhi4>
	buff = 0;
	print_bool(x, y, digit_a);
    2fda:	ab 01       	movw	r20, r22
    2fdc:	55 27       	eor	r21, r21
    2fde:	b7 01       	movw	r22, r14
    2fe0:	c8 01       	movw	r24, r16
    2fe2:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <print_bool>
	print_bool(x+27, y, digit_b);
    2fe6:	a5 01       	movw	r20, r10
    2fe8:	55 27       	eor	r21, r21
    2fea:	b7 01       	movw	r22, r14
    2fec:	c8 01       	movw	r24, r16
    2fee:	4b 96       	adiw	r24, 0x1b	; 27
    2ff0:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <print_bool>
	print_bool(x+54, y, digit_c);
    2ff4:	a6 01       	movw	r20, r12
    2ff6:	55 27       	eor	r21, r21
    2ff8:	b7 01       	movw	r22, r14
    2ffa:	c8 01       	movw	r24, r16
    2ffc:	c6 96       	adiw	r24, 0x36	; 54
    2ffe:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <print_bool>
	
}
    3002:	df 91       	pop	r29
    3004:	cf 91       	pop	r28
    3006:	1f 91       	pop	r17
    3008:	0f 91       	pop	r16
    300a:	ff 90       	pop	r15
    300c:	ef 90       	pop	r14
    300e:	df 90       	pop	r13
    3010:	cf 90       	pop	r12
    3012:	bf 90       	pop	r11
    3014:	af 90       	pop	r10
    3016:	08 95       	ret

00003018 <main>:
void ST7586_send_data(uint8_t data[], uint8_t dataSize);



int main(void)
{   _PROTECTED_WRITE (CLKCTRL.OSCHFCTRLA, ((CLKCTRL_FREQSEL_24M_gc)|(CLKCTRL_AUTOTUNE_bm)));			//To increase clock freq
    3018:	95 e2       	ldi	r25, 0x25	; 37
    301a:	88 ed       	ldi	r24, 0xD8	; 216
    301c:	84 bf       	out	0x34, r24	; 52
    301e:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	PORTB_DIR |= (1<<4);  // data/cmd
    3022:	e0 e2       	ldi	r30, 0x20	; 32
    3024:	f4 e0       	ldi	r31, 0x04	; 4
    3026:	80 81       	ld	r24, Z
    3028:	80 61       	ori	r24, 0x10	; 16
    302a:	80 83       	st	Z, r24
	PORTC_DIR |= (1<<5); //Reset pin
    302c:	e0 e4       	ldi	r30, 0x40	; 64
    302e:	f4 e0       	ldi	r31, 0x04	; 4
    3030:	80 81       	ld	r24, Z
    3032:	80 62       	ori	r24, 0x20	; 32
    3034:	80 83       	st	Z, r24
	TCA0_PWM_init();
    3036:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <TCA0_PWM_init>
	Sensor_init();
    303a:	0e 94 ac 13 	call	0x2758	; 0x2758 <Sensor_init>
	USART1_init(9600);
    303e:	80 e8       	ldi	r24, 0x80	; 128
    3040:	95 e2       	ldi	r25, 0x25	; 37
    3042:	0e 94 9e 12 	call	0x253c	; 0x253c <USART1_init>
	ADC0_init();
    3046:	0e 94 01 14 	call	0x2802	; 0x2802 <ADC0_init>
	SPI_0_init();
    304a:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <SPI_0_init>
	ST7586_init(1);
    304e:	81 e0       	ldi	r24, 0x01	; 1
    3050:	0e 94 e2 14 	call	0x29c4	; 0x29c4 <ST7586_init>
	_print_icon(25,25,32,low_battery_15x32,15,32);
    3054:	68 94       	set
    3056:	ee 24       	eor	r14, r14
    3058:	e5 f8       	bld	r14, 5
    305a:	f1 2c       	mov	r15, r1
    305c:	0f e0       	ldi	r16, 0x0F	; 15
    305e:	10 e0       	ldi	r17, 0x00	; 0
    3060:	2a e6       	ldi	r18, 0x6A	; 106
    3062:	31 e0       	ldi	r19, 0x01	; 1
    3064:	40 e2       	ldi	r20, 0x20	; 32
    3066:	50 e0       	ldi	r21, 0x00	; 0
    3068:	69 e1       	ldi	r22, 0x19	; 25
    306a:	70 e0       	ldi	r23, 0x00	; 0
    306c:	89 e1       	ldi	r24, 0x19	; 25
    306e:	90 e0       	ldi	r25, 0x00	; 0
    3070:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <_print_icon>
	
	//ST7586_fill(ST7586_COLOR_BLACK);
	while (1)
	{   uint8_t i = 200;
		float pressure = 0.0;
    3074:	c1 2c       	mov	r12, r1
    3076:	d1 2c       	mov	r13, r1
    3078:	76 01       	movw	r14, r12
	ST7586_init(1);
	_print_icon(25,25,32,low_battery_15x32,15,32);
	
	//ST7586_fill(ST7586_COLOR_BLACK);
	while (1)
	{   uint8_t i = 200;
    307a:	c8 ec       	ldi	r28, 0xC8	; 200
		float pressure = 0.0;
		
		while(i)
    307c:	11 c0       	rjmp	.+34     	; 0x30a0 <main+0x88>
		{
			pressure = pressure + pressureRead();
    307e:	0e 94 b5 13 	call	0x276a	; 0x276a <pressureRead>
    3082:	9b 01       	movw	r18, r22
    3084:	ac 01       	movw	r20, r24
    3086:	c7 01       	movw	r24, r14
    3088:	b6 01       	movw	r22, r12
    308a:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    308e:	6b 01       	movw	r12, r22
    3090:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3092:	8f e6       	ldi	r24, 0x6F	; 111
    3094:	97 e1       	ldi	r25, 0x17	; 23
    3096:	01 97       	sbiw	r24, 0x01	; 1
    3098:	f1 f7       	brne	.-4      	; 0x3096 <main+0x7e>
    309a:	00 c0       	rjmp	.+0      	; 0x309c <main+0x84>
    309c:	00 00       	nop
			_delay_us(1000);
			i--;
    309e:	c1 50       	subi	r28, 0x01	; 1
	//ST7586_fill(ST7586_COLOR_BLACK);
	while (1)
	{   uint8_t i = 200;
		float pressure = 0.0;
		
		while(i)
    30a0:	c1 11       	cpse	r28, r1
    30a2:	ed cf       	rjmp	.-38     	; 0x307e <main+0x66>
		{
			pressure = pressure + pressureRead();
			_delay_us(1000);
			i--;
		}
	final_pressure = ((pressure/200)*51.7149); //final pressure in mmHg
    30a4:	20 e0       	ldi	r18, 0x00	; 0
    30a6:	30 e0       	ldi	r19, 0x00	; 0
    30a8:	48 e4       	ldi	r20, 0x48	; 72
    30aa:	53 e4       	ldi	r21, 0x43	; 67
    30ac:	c7 01       	movw	r24, r14
    30ae:	b6 01       	movw	r22, r12
    30b0:	0e 94 04 19 	call	0x3208	; 0x3208 <__divsf3>
    30b4:	2f e0       	ldi	r18, 0x0F	; 15
    30b6:	3c ed       	ldi	r19, 0xDC	; 220
    30b8:	4e e4       	ldi	r20, 0x4E	; 78
    30ba:	52 e4       	ldi	r21, 0x42	; 66
    30bc:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__mulsf3>
    30c0:	60 93 b6 40 	sts	0x40B6, r22	; 0x8040b6 <__data_end>
    30c4:	70 93 b7 40 	sts	0x40B7, r23	; 0x8040b7 <__data_end+0x1>
    30c8:	80 93 b8 40 	sts	0x40B8, r24	; 0x8040b8 <__data_end+0x2>
    30cc:	90 93 b9 40 	sts	0x40B9, r25	; 0x8040b9 <__data_end+0x3>
	USART1_sendFloat(final_pressure,2);
    30d0:	42 e0       	ldi	r20, 0x02	; 2
    30d2:	50 e0       	ldi	r21, 0x00	; 0
    30d4:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <USART1_sendFloat>
	
	int count = 0;
	count = ADC0_read(channel_1);
    30d8:	81 e0       	ldi	r24, 0x01	; 1
    30da:	0e 94 0e 14 	call	0x281c	; 0x281c <ADC0_read>
	
	dutyCycle1 = 0.3663004*count + 1500;
    30de:	bc 01       	movw	r22, r24
    30e0:	99 0f       	add	r25, r25
    30e2:	88 0b       	sbc	r24, r24
    30e4:	99 0b       	sbc	r25, r25
    30e6:	0e 94 ae 19 	call	0x335c	; 0x335c <__floatsisf>
    30ea:	2a eb       	ldi	r18, 0xBA	; 186
    30ec:	3b e8       	ldi	r19, 0x8B	; 139
    30ee:	4b eb       	ldi	r20, 0xBB	; 187
    30f0:	5e e3       	ldi	r21, 0x3E	; 62
    30f2:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__mulsf3>
    30f6:	20 e0       	ldi	r18, 0x00	; 0
    30f8:	30 e8       	ldi	r19, 0x80	; 128
    30fa:	4b eb       	ldi	r20, 0xBB	; 187
    30fc:	54 e4       	ldi	r21, 0x44	; 68
    30fe:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    3102:	0e 94 76 19 	call	0x32ec	; 0x32ec <__fixsfsi>
    3106:	60 93 05 40 	sts	0x4005, r22	; 0x804005 <dutyCycle1>
    310a:	70 93 06 40 	sts	0x4006, r23	; 0x804006 <dutyCycle1+0x1>
	TCA0.SINGLE.CMP0 = dutyCycle1;
    310e:	60 93 28 0a 	sts	0x0A28, r22	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
    3112:	70 93 29 0a 	sts	0x0A29, r23	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
	show_mmgh_3digit(150,80);	
    3116:	60 e5       	ldi	r22, 0x50	; 80
    3118:	70 e0       	ldi	r23, 0x00	; 0
    311a:	86 e9       	ldi	r24, 0x96	; 150
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <show_mmgh_3digit>
	}
    3122:	a8 cf       	rjmp	.-176    	; 0x3074 <main+0x5c>

00003124 <__subsf3>:
    3124:	50 58       	subi	r21, 0x80	; 128

00003126 <__addsf3>:
    3126:	bb 27       	eor	r27, r27
    3128:	aa 27       	eor	r26, r26
    312a:	0e 94 aa 18 	call	0x3154	; 0x3154 <__addsf3x>
    312e:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <__fp_round>
    3132:	0e 94 16 1a 	call	0x342c	; 0x342c <__fp_pscA>
    3136:	38 f0       	brcs	.+14     	; 0x3146 <__addsf3+0x20>
    3138:	0e 94 1d 1a 	call	0x343a	; 0x343a <__fp_pscB>
    313c:	20 f0       	brcs	.+8      	; 0x3146 <__addsf3+0x20>
    313e:	39 f4       	brne	.+14     	; 0x314e <__addsf3+0x28>
    3140:	9f 3f       	cpi	r25, 0xFF	; 255
    3142:	19 f4       	brne	.+6      	; 0x314a <__addsf3+0x24>
    3144:	26 f4       	brtc	.+8      	; 0x314e <__addsf3+0x28>
    3146:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>
    314a:	0e f4       	brtc	.+2      	; 0x314e <__addsf3+0x28>
    314c:	e0 95       	com	r30
    314e:	e7 fb       	bst	r30, 7
    3150:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>

00003154 <__addsf3x>:
    3154:	e9 2f       	mov	r30, r25
    3156:	0e 94 35 1a 	call	0x346a	; 0x346a <__fp_split3>
    315a:	58 f3       	brcs	.-42     	; 0x3132 <__addsf3+0xc>
    315c:	ba 17       	cp	r27, r26
    315e:	62 07       	cpc	r22, r18
    3160:	73 07       	cpc	r23, r19
    3162:	84 07       	cpc	r24, r20
    3164:	95 07       	cpc	r25, r21
    3166:	20 f0       	brcs	.+8      	; 0x3170 <__addsf3x+0x1c>
    3168:	79 f4       	brne	.+30     	; 0x3188 <__addsf3x+0x34>
    316a:	a6 f5       	brtc	.+104    	; 0x31d4 <__addsf3x+0x80>
    316c:	0c 94 57 1a 	jmp	0x34ae	; 0x34ae <__fp_zero>
    3170:	0e f4       	brtc	.+2      	; 0x3174 <__addsf3x+0x20>
    3172:	e0 95       	com	r30
    3174:	0b 2e       	mov	r0, r27
    3176:	ba 2f       	mov	r27, r26
    3178:	a0 2d       	mov	r26, r0
    317a:	0b 01       	movw	r0, r22
    317c:	b9 01       	movw	r22, r18
    317e:	90 01       	movw	r18, r0
    3180:	0c 01       	movw	r0, r24
    3182:	ca 01       	movw	r24, r20
    3184:	a0 01       	movw	r20, r0
    3186:	11 24       	eor	r1, r1
    3188:	ff 27       	eor	r31, r31
    318a:	59 1b       	sub	r21, r25
    318c:	99 f0       	breq	.+38     	; 0x31b4 <__addsf3x+0x60>
    318e:	59 3f       	cpi	r21, 0xF9	; 249
    3190:	50 f4       	brcc	.+20     	; 0x31a6 <__addsf3x+0x52>
    3192:	50 3e       	cpi	r21, 0xE0	; 224
    3194:	68 f1       	brcs	.+90     	; 0x31f0 <__addsf3x+0x9c>
    3196:	1a 16       	cp	r1, r26
    3198:	f0 40       	sbci	r31, 0x00	; 0
    319a:	a2 2f       	mov	r26, r18
    319c:	23 2f       	mov	r18, r19
    319e:	34 2f       	mov	r19, r20
    31a0:	44 27       	eor	r20, r20
    31a2:	58 5f       	subi	r21, 0xF8	; 248
    31a4:	f3 cf       	rjmp	.-26     	; 0x318c <__addsf3x+0x38>
    31a6:	46 95       	lsr	r20
    31a8:	37 95       	ror	r19
    31aa:	27 95       	ror	r18
    31ac:	a7 95       	ror	r26
    31ae:	f0 40       	sbci	r31, 0x00	; 0
    31b0:	53 95       	inc	r21
    31b2:	c9 f7       	brne	.-14     	; 0x31a6 <__addsf3x+0x52>
    31b4:	7e f4       	brtc	.+30     	; 0x31d4 <__addsf3x+0x80>
    31b6:	1f 16       	cp	r1, r31
    31b8:	ba 0b       	sbc	r27, r26
    31ba:	62 0b       	sbc	r22, r18
    31bc:	73 0b       	sbc	r23, r19
    31be:	84 0b       	sbc	r24, r20
    31c0:	ba f0       	brmi	.+46     	; 0x31f0 <__addsf3x+0x9c>
    31c2:	91 50       	subi	r25, 0x01	; 1
    31c4:	a1 f0       	breq	.+40     	; 0x31ee <__addsf3x+0x9a>
    31c6:	ff 0f       	add	r31, r31
    31c8:	bb 1f       	adc	r27, r27
    31ca:	66 1f       	adc	r22, r22
    31cc:	77 1f       	adc	r23, r23
    31ce:	88 1f       	adc	r24, r24
    31d0:	c2 f7       	brpl	.-16     	; 0x31c2 <__addsf3x+0x6e>
    31d2:	0e c0       	rjmp	.+28     	; 0x31f0 <__addsf3x+0x9c>
    31d4:	ba 0f       	add	r27, r26
    31d6:	62 1f       	adc	r22, r18
    31d8:	73 1f       	adc	r23, r19
    31da:	84 1f       	adc	r24, r20
    31dc:	48 f4       	brcc	.+18     	; 0x31f0 <__addsf3x+0x9c>
    31de:	87 95       	ror	r24
    31e0:	77 95       	ror	r23
    31e2:	67 95       	ror	r22
    31e4:	b7 95       	ror	r27
    31e6:	f7 95       	ror	r31
    31e8:	9e 3f       	cpi	r25, 0xFE	; 254
    31ea:	08 f0       	brcs	.+2      	; 0x31ee <__addsf3x+0x9a>
    31ec:	b0 cf       	rjmp	.-160    	; 0x314e <__addsf3+0x28>
    31ee:	93 95       	inc	r25
    31f0:	88 0f       	add	r24, r24
    31f2:	08 f0       	brcs	.+2      	; 0x31f6 <__addsf3x+0xa2>
    31f4:	99 27       	eor	r25, r25
    31f6:	ee 0f       	add	r30, r30
    31f8:	97 95       	ror	r25
    31fa:	87 95       	ror	r24
    31fc:	08 95       	ret

000031fe <__cmpsf2>:
    31fe:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <__fp_cmp>
    3202:	08 f4       	brcc	.+2      	; 0x3206 <__cmpsf2+0x8>
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	08 95       	ret

00003208 <__divsf3>:
    3208:	0e 94 18 19 	call	0x3230	; 0x3230 <__divsf3x>
    320c:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <__fp_round>
    3210:	0e 94 1d 1a 	call	0x343a	; 0x343a <__fp_pscB>
    3214:	58 f0       	brcs	.+22     	; 0x322c <__divsf3+0x24>
    3216:	0e 94 16 1a 	call	0x342c	; 0x342c <__fp_pscA>
    321a:	40 f0       	brcs	.+16     	; 0x322c <__divsf3+0x24>
    321c:	29 f4       	brne	.+10     	; 0x3228 <__divsf3+0x20>
    321e:	5f 3f       	cpi	r21, 0xFF	; 255
    3220:	29 f0       	breq	.+10     	; 0x322c <__divsf3+0x24>
    3222:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    3226:	51 11       	cpse	r21, r1
    3228:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>
    322c:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>

00003230 <__divsf3x>:
    3230:	0e 94 35 1a 	call	0x346a	; 0x346a <__fp_split3>
    3234:	68 f3       	brcs	.-38     	; 0x3210 <__divsf3+0x8>

00003236 <__divsf3_pse>:
    3236:	99 23       	and	r25, r25
    3238:	b1 f3       	breq	.-20     	; 0x3226 <__divsf3+0x1e>
    323a:	55 23       	and	r21, r21
    323c:	91 f3       	breq	.-28     	; 0x3222 <__divsf3+0x1a>
    323e:	95 1b       	sub	r25, r21
    3240:	55 0b       	sbc	r21, r21
    3242:	bb 27       	eor	r27, r27
    3244:	aa 27       	eor	r26, r26
    3246:	62 17       	cp	r22, r18
    3248:	73 07       	cpc	r23, r19
    324a:	84 07       	cpc	r24, r20
    324c:	38 f0       	brcs	.+14     	; 0x325c <__divsf3_pse+0x26>
    324e:	9f 5f       	subi	r25, 0xFF	; 255
    3250:	5f 4f       	sbci	r21, 0xFF	; 255
    3252:	22 0f       	add	r18, r18
    3254:	33 1f       	adc	r19, r19
    3256:	44 1f       	adc	r20, r20
    3258:	aa 1f       	adc	r26, r26
    325a:	a9 f3       	breq	.-22     	; 0x3246 <__divsf3_pse+0x10>
    325c:	35 d0       	rcall	.+106    	; 0x32c8 <__divsf3_pse+0x92>
    325e:	0e 2e       	mov	r0, r30
    3260:	3a f0       	brmi	.+14     	; 0x3270 <__divsf3_pse+0x3a>
    3262:	e0 e8       	ldi	r30, 0x80	; 128
    3264:	32 d0       	rcall	.+100    	; 0x32ca <__divsf3_pse+0x94>
    3266:	91 50       	subi	r25, 0x01	; 1
    3268:	50 40       	sbci	r21, 0x00	; 0
    326a:	e6 95       	lsr	r30
    326c:	00 1c       	adc	r0, r0
    326e:	ca f7       	brpl	.-14     	; 0x3262 <__divsf3_pse+0x2c>
    3270:	2b d0       	rcall	.+86     	; 0x32c8 <__divsf3_pse+0x92>
    3272:	fe 2f       	mov	r31, r30
    3274:	29 d0       	rcall	.+82     	; 0x32c8 <__divsf3_pse+0x92>
    3276:	66 0f       	add	r22, r22
    3278:	77 1f       	adc	r23, r23
    327a:	88 1f       	adc	r24, r24
    327c:	bb 1f       	adc	r27, r27
    327e:	26 17       	cp	r18, r22
    3280:	37 07       	cpc	r19, r23
    3282:	48 07       	cpc	r20, r24
    3284:	ab 07       	cpc	r26, r27
    3286:	b0 e8       	ldi	r27, 0x80	; 128
    3288:	09 f0       	breq	.+2      	; 0x328c <__divsf3_pse+0x56>
    328a:	bb 0b       	sbc	r27, r27
    328c:	80 2d       	mov	r24, r0
    328e:	bf 01       	movw	r22, r30
    3290:	ff 27       	eor	r31, r31
    3292:	93 58       	subi	r25, 0x83	; 131
    3294:	5f 4f       	sbci	r21, 0xFF	; 255
    3296:	3a f0       	brmi	.+14     	; 0x32a6 <__divsf3_pse+0x70>
    3298:	9e 3f       	cpi	r25, 0xFE	; 254
    329a:	51 05       	cpc	r21, r1
    329c:	78 f0       	brcs	.+30     	; 0x32bc <__divsf3_pse+0x86>
    329e:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    32a2:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>
    32a6:	5f 3f       	cpi	r21, 0xFF	; 255
    32a8:	e4 f3       	brlt	.-8      	; 0x32a2 <__divsf3_pse+0x6c>
    32aa:	98 3e       	cpi	r25, 0xE8	; 232
    32ac:	d4 f3       	brlt	.-12     	; 0x32a2 <__divsf3_pse+0x6c>
    32ae:	86 95       	lsr	r24
    32b0:	77 95       	ror	r23
    32b2:	67 95       	ror	r22
    32b4:	b7 95       	ror	r27
    32b6:	f7 95       	ror	r31
    32b8:	9f 5f       	subi	r25, 0xFF	; 255
    32ba:	c9 f7       	brne	.-14     	; 0x32ae <__divsf3_pse+0x78>
    32bc:	88 0f       	add	r24, r24
    32be:	91 1d       	adc	r25, r1
    32c0:	96 95       	lsr	r25
    32c2:	87 95       	ror	r24
    32c4:	97 f9       	bld	r25, 7
    32c6:	08 95       	ret
    32c8:	e1 e0       	ldi	r30, 0x01	; 1
    32ca:	66 0f       	add	r22, r22
    32cc:	77 1f       	adc	r23, r23
    32ce:	88 1f       	adc	r24, r24
    32d0:	bb 1f       	adc	r27, r27
    32d2:	62 17       	cp	r22, r18
    32d4:	73 07       	cpc	r23, r19
    32d6:	84 07       	cpc	r24, r20
    32d8:	ba 07       	cpc	r27, r26
    32da:	20 f0       	brcs	.+8      	; 0x32e4 <__divsf3_pse+0xae>
    32dc:	62 1b       	sub	r22, r18
    32de:	73 0b       	sbc	r23, r19
    32e0:	84 0b       	sbc	r24, r20
    32e2:	ba 0b       	sbc	r27, r26
    32e4:	ee 1f       	adc	r30, r30
    32e6:	88 f7       	brcc	.-30     	; 0x32ca <__divsf3_pse+0x94>
    32e8:	e0 95       	com	r30
    32ea:	08 95       	ret

000032ec <__fixsfsi>:
    32ec:	0e 94 7d 19 	call	0x32fa	; 0x32fa <__fixunssfsi>
    32f0:	68 94       	set
    32f2:	b1 11       	cpse	r27, r1
    32f4:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>
    32f8:	08 95       	ret

000032fa <__fixunssfsi>:
    32fa:	0e 94 3d 1a 	call	0x347a	; 0x347a <__fp_splitA>
    32fe:	88 f0       	brcs	.+34     	; 0x3322 <__fixunssfsi+0x28>
    3300:	9f 57       	subi	r25, 0x7F	; 127
    3302:	98 f0       	brcs	.+38     	; 0x332a <__fixunssfsi+0x30>
    3304:	b9 2f       	mov	r27, r25
    3306:	99 27       	eor	r25, r25
    3308:	b7 51       	subi	r27, 0x17	; 23
    330a:	b0 f0       	brcs	.+44     	; 0x3338 <__fixunssfsi+0x3e>
    330c:	e1 f0       	breq	.+56     	; 0x3346 <__fixunssfsi+0x4c>
    330e:	66 0f       	add	r22, r22
    3310:	77 1f       	adc	r23, r23
    3312:	88 1f       	adc	r24, r24
    3314:	99 1f       	adc	r25, r25
    3316:	1a f0       	brmi	.+6      	; 0x331e <__fixunssfsi+0x24>
    3318:	ba 95       	dec	r27
    331a:	c9 f7       	brne	.-14     	; 0x330e <__fixunssfsi+0x14>
    331c:	14 c0       	rjmp	.+40     	; 0x3346 <__fixunssfsi+0x4c>
    331e:	b1 30       	cpi	r27, 0x01	; 1
    3320:	91 f0       	breq	.+36     	; 0x3346 <__fixunssfsi+0x4c>
    3322:	0e 94 57 1a 	call	0x34ae	; 0x34ae <__fp_zero>
    3326:	b1 e0       	ldi	r27, 0x01	; 1
    3328:	08 95       	ret
    332a:	0c 94 57 1a 	jmp	0x34ae	; 0x34ae <__fp_zero>
    332e:	67 2f       	mov	r22, r23
    3330:	78 2f       	mov	r23, r24
    3332:	88 27       	eor	r24, r24
    3334:	b8 5f       	subi	r27, 0xF8	; 248
    3336:	39 f0       	breq	.+14     	; 0x3346 <__fixunssfsi+0x4c>
    3338:	b9 3f       	cpi	r27, 0xF9	; 249
    333a:	cc f3       	brlt	.-14     	; 0x332e <__fixunssfsi+0x34>
    333c:	86 95       	lsr	r24
    333e:	77 95       	ror	r23
    3340:	67 95       	ror	r22
    3342:	b3 95       	inc	r27
    3344:	d9 f7       	brne	.-10     	; 0x333c <__fixunssfsi+0x42>
    3346:	3e f4       	brtc	.+14     	; 0x3356 <__fixunssfsi+0x5c>
    3348:	90 95       	com	r25
    334a:	80 95       	com	r24
    334c:	70 95       	com	r23
    334e:	61 95       	neg	r22
    3350:	7f 4f       	sbci	r23, 0xFF	; 255
    3352:	8f 4f       	sbci	r24, 0xFF	; 255
    3354:	9f 4f       	sbci	r25, 0xFF	; 255
    3356:	08 95       	ret

00003358 <__floatunsisf>:
    3358:	e8 94       	clt
    335a:	09 c0       	rjmp	.+18     	; 0x336e <__floatsisf+0x12>

0000335c <__floatsisf>:
    335c:	97 fb       	bst	r25, 7
    335e:	3e f4       	brtc	.+14     	; 0x336e <__floatsisf+0x12>
    3360:	90 95       	com	r25
    3362:	80 95       	com	r24
    3364:	70 95       	com	r23
    3366:	61 95       	neg	r22
    3368:	7f 4f       	sbci	r23, 0xFF	; 255
    336a:	8f 4f       	sbci	r24, 0xFF	; 255
    336c:	9f 4f       	sbci	r25, 0xFF	; 255
    336e:	99 23       	and	r25, r25
    3370:	a9 f0       	breq	.+42     	; 0x339c <__floatsisf+0x40>
    3372:	f9 2f       	mov	r31, r25
    3374:	96 e9       	ldi	r25, 0x96	; 150
    3376:	bb 27       	eor	r27, r27
    3378:	93 95       	inc	r25
    337a:	f6 95       	lsr	r31
    337c:	87 95       	ror	r24
    337e:	77 95       	ror	r23
    3380:	67 95       	ror	r22
    3382:	b7 95       	ror	r27
    3384:	f1 11       	cpse	r31, r1
    3386:	f8 cf       	rjmp	.-16     	; 0x3378 <__floatsisf+0x1c>
    3388:	fa f4       	brpl	.+62     	; 0x33c8 <__floatsisf+0x6c>
    338a:	bb 0f       	add	r27, r27
    338c:	11 f4       	brne	.+4      	; 0x3392 <__floatsisf+0x36>
    338e:	60 ff       	sbrs	r22, 0
    3390:	1b c0       	rjmp	.+54     	; 0x33c8 <__floatsisf+0x6c>
    3392:	6f 5f       	subi	r22, 0xFF	; 255
    3394:	7f 4f       	sbci	r23, 0xFF	; 255
    3396:	8f 4f       	sbci	r24, 0xFF	; 255
    3398:	9f 4f       	sbci	r25, 0xFF	; 255
    339a:	16 c0       	rjmp	.+44     	; 0x33c8 <__floatsisf+0x6c>
    339c:	88 23       	and	r24, r24
    339e:	11 f0       	breq	.+4      	; 0x33a4 <__floatsisf+0x48>
    33a0:	96 e9       	ldi	r25, 0x96	; 150
    33a2:	11 c0       	rjmp	.+34     	; 0x33c6 <__floatsisf+0x6a>
    33a4:	77 23       	and	r23, r23
    33a6:	21 f0       	breq	.+8      	; 0x33b0 <__floatsisf+0x54>
    33a8:	9e e8       	ldi	r25, 0x8E	; 142
    33aa:	87 2f       	mov	r24, r23
    33ac:	76 2f       	mov	r23, r22
    33ae:	05 c0       	rjmp	.+10     	; 0x33ba <__floatsisf+0x5e>
    33b0:	66 23       	and	r22, r22
    33b2:	71 f0       	breq	.+28     	; 0x33d0 <__floatsisf+0x74>
    33b4:	96 e8       	ldi	r25, 0x86	; 134
    33b6:	86 2f       	mov	r24, r22
    33b8:	70 e0       	ldi	r23, 0x00	; 0
    33ba:	60 e0       	ldi	r22, 0x00	; 0
    33bc:	2a f0       	brmi	.+10     	; 0x33c8 <__floatsisf+0x6c>
    33be:	9a 95       	dec	r25
    33c0:	66 0f       	add	r22, r22
    33c2:	77 1f       	adc	r23, r23
    33c4:	88 1f       	adc	r24, r24
    33c6:	da f7       	brpl	.-10     	; 0x33be <__floatsisf+0x62>
    33c8:	88 0f       	add	r24, r24
    33ca:	96 95       	lsr	r25
    33cc:	87 95       	ror	r24
    33ce:	97 f9       	bld	r25, 7
    33d0:	08 95       	ret

000033d2 <__fp_cmp>:
    33d2:	99 0f       	add	r25, r25
    33d4:	00 08       	sbc	r0, r0
    33d6:	55 0f       	add	r21, r21
    33d8:	aa 0b       	sbc	r26, r26
    33da:	e0 e8       	ldi	r30, 0x80	; 128
    33dc:	fe ef       	ldi	r31, 0xFE	; 254
    33de:	16 16       	cp	r1, r22
    33e0:	17 06       	cpc	r1, r23
    33e2:	e8 07       	cpc	r30, r24
    33e4:	f9 07       	cpc	r31, r25
    33e6:	c0 f0       	brcs	.+48     	; 0x3418 <__fp_cmp+0x46>
    33e8:	12 16       	cp	r1, r18
    33ea:	13 06       	cpc	r1, r19
    33ec:	e4 07       	cpc	r30, r20
    33ee:	f5 07       	cpc	r31, r21
    33f0:	98 f0       	brcs	.+38     	; 0x3418 <__fp_cmp+0x46>
    33f2:	62 1b       	sub	r22, r18
    33f4:	73 0b       	sbc	r23, r19
    33f6:	84 0b       	sbc	r24, r20
    33f8:	95 0b       	sbc	r25, r21
    33fa:	39 f4       	brne	.+14     	; 0x340a <__fp_cmp+0x38>
    33fc:	0a 26       	eor	r0, r26
    33fe:	61 f0       	breq	.+24     	; 0x3418 <__fp_cmp+0x46>
    3400:	23 2b       	or	r18, r19
    3402:	24 2b       	or	r18, r20
    3404:	25 2b       	or	r18, r21
    3406:	21 f4       	brne	.+8      	; 0x3410 <__fp_cmp+0x3e>
    3408:	08 95       	ret
    340a:	0a 26       	eor	r0, r26
    340c:	09 f4       	brne	.+2      	; 0x3410 <__fp_cmp+0x3e>
    340e:	a1 40       	sbci	r26, 0x01	; 1
    3410:	a6 95       	lsr	r26
    3412:	8f ef       	ldi	r24, 0xFF	; 255
    3414:	81 1d       	adc	r24, r1
    3416:	81 1d       	adc	r24, r1
    3418:	08 95       	ret

0000341a <__fp_inf>:
    341a:	97 f9       	bld	r25, 7
    341c:	9f 67       	ori	r25, 0x7F	; 127
    341e:	80 e8       	ldi	r24, 0x80	; 128
    3420:	70 e0       	ldi	r23, 0x00	; 0
    3422:	60 e0       	ldi	r22, 0x00	; 0
    3424:	08 95       	ret

00003426 <__fp_nan>:
    3426:	9f ef       	ldi	r25, 0xFF	; 255
    3428:	80 ec       	ldi	r24, 0xC0	; 192
    342a:	08 95       	ret

0000342c <__fp_pscA>:
    342c:	00 24       	eor	r0, r0
    342e:	0a 94       	dec	r0
    3430:	16 16       	cp	r1, r22
    3432:	17 06       	cpc	r1, r23
    3434:	18 06       	cpc	r1, r24
    3436:	09 06       	cpc	r0, r25
    3438:	08 95       	ret

0000343a <__fp_pscB>:
    343a:	00 24       	eor	r0, r0
    343c:	0a 94       	dec	r0
    343e:	12 16       	cp	r1, r18
    3440:	13 06       	cpc	r1, r19
    3442:	14 06       	cpc	r1, r20
    3444:	05 06       	cpc	r0, r21
    3446:	08 95       	ret

00003448 <__fp_round>:
    3448:	09 2e       	mov	r0, r25
    344a:	03 94       	inc	r0
    344c:	00 0c       	add	r0, r0
    344e:	11 f4       	brne	.+4      	; 0x3454 <__fp_round+0xc>
    3450:	88 23       	and	r24, r24
    3452:	52 f0       	brmi	.+20     	; 0x3468 <__fp_round+0x20>
    3454:	bb 0f       	add	r27, r27
    3456:	40 f4       	brcc	.+16     	; 0x3468 <__fp_round+0x20>
    3458:	bf 2b       	or	r27, r31
    345a:	11 f4       	brne	.+4      	; 0x3460 <__fp_round+0x18>
    345c:	60 ff       	sbrs	r22, 0
    345e:	04 c0       	rjmp	.+8      	; 0x3468 <__fp_round+0x20>
    3460:	6f 5f       	subi	r22, 0xFF	; 255
    3462:	7f 4f       	sbci	r23, 0xFF	; 255
    3464:	8f 4f       	sbci	r24, 0xFF	; 255
    3466:	9f 4f       	sbci	r25, 0xFF	; 255
    3468:	08 95       	ret

0000346a <__fp_split3>:
    346a:	57 fd       	sbrc	r21, 7
    346c:	90 58       	subi	r25, 0x80	; 128
    346e:	44 0f       	add	r20, r20
    3470:	55 1f       	adc	r21, r21
    3472:	59 f0       	breq	.+22     	; 0x348a <__fp_splitA+0x10>
    3474:	5f 3f       	cpi	r21, 0xFF	; 255
    3476:	71 f0       	breq	.+28     	; 0x3494 <__fp_splitA+0x1a>
    3478:	47 95       	ror	r20

0000347a <__fp_splitA>:
    347a:	88 0f       	add	r24, r24
    347c:	97 fb       	bst	r25, 7
    347e:	99 1f       	adc	r25, r25
    3480:	61 f0       	breq	.+24     	; 0x349a <__fp_splitA+0x20>
    3482:	9f 3f       	cpi	r25, 0xFF	; 255
    3484:	79 f0       	breq	.+30     	; 0x34a4 <__fp_splitA+0x2a>
    3486:	87 95       	ror	r24
    3488:	08 95       	ret
    348a:	12 16       	cp	r1, r18
    348c:	13 06       	cpc	r1, r19
    348e:	14 06       	cpc	r1, r20
    3490:	55 1f       	adc	r21, r21
    3492:	f2 cf       	rjmp	.-28     	; 0x3478 <__fp_split3+0xe>
    3494:	46 95       	lsr	r20
    3496:	f1 df       	rcall	.-30     	; 0x347a <__fp_splitA>
    3498:	08 c0       	rjmp	.+16     	; 0x34aa <__fp_splitA+0x30>
    349a:	16 16       	cp	r1, r22
    349c:	17 06       	cpc	r1, r23
    349e:	18 06       	cpc	r1, r24
    34a0:	99 1f       	adc	r25, r25
    34a2:	f1 cf       	rjmp	.-30     	; 0x3486 <__fp_splitA+0xc>
    34a4:	86 95       	lsr	r24
    34a6:	71 05       	cpc	r23, r1
    34a8:	61 05       	cpc	r22, r1
    34aa:	08 94       	sec
    34ac:	08 95       	ret

000034ae <__fp_zero>:
    34ae:	e8 94       	clt

000034b0 <__fp_szero>:
    34b0:	bb 27       	eor	r27, r27
    34b2:	66 27       	eor	r22, r22
    34b4:	77 27       	eor	r23, r23
    34b6:	cb 01       	movw	r24, r22
    34b8:	97 f9       	bld	r25, 7
    34ba:	08 95       	ret

000034bc <__gesf2>:
    34bc:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <__fp_cmp>
    34c0:	08 f4       	brcc	.+2      	; 0x34c4 <__gesf2+0x8>
    34c2:	8f ef       	ldi	r24, 0xFF	; 255
    34c4:	08 95       	ret

000034c6 <__mulsf3>:
    34c6:	0e 94 76 1a 	call	0x34ec	; 0x34ec <__mulsf3x>
    34ca:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <__fp_round>
    34ce:	0e 94 16 1a 	call	0x342c	; 0x342c <__fp_pscA>
    34d2:	38 f0       	brcs	.+14     	; 0x34e2 <__mulsf3+0x1c>
    34d4:	0e 94 1d 1a 	call	0x343a	; 0x343a <__fp_pscB>
    34d8:	20 f0       	brcs	.+8      	; 0x34e2 <__mulsf3+0x1c>
    34da:	95 23       	and	r25, r21
    34dc:	11 f0       	breq	.+4      	; 0x34e2 <__mulsf3+0x1c>
    34de:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    34e2:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>
    34e6:	11 24       	eor	r1, r1
    34e8:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>

000034ec <__mulsf3x>:
    34ec:	0e 94 35 1a 	call	0x346a	; 0x346a <__fp_split3>
    34f0:	70 f3       	brcs	.-36     	; 0x34ce <__mulsf3+0x8>

000034f2 <__mulsf3_pse>:
    34f2:	95 9f       	mul	r25, r21
    34f4:	c1 f3       	breq	.-16     	; 0x34e6 <__mulsf3+0x20>
    34f6:	95 0f       	add	r25, r21
    34f8:	50 e0       	ldi	r21, 0x00	; 0
    34fa:	55 1f       	adc	r21, r21
    34fc:	62 9f       	mul	r22, r18
    34fe:	f0 01       	movw	r30, r0
    3500:	72 9f       	mul	r23, r18
    3502:	bb 27       	eor	r27, r27
    3504:	f0 0d       	add	r31, r0
    3506:	b1 1d       	adc	r27, r1
    3508:	63 9f       	mul	r22, r19
    350a:	aa 27       	eor	r26, r26
    350c:	f0 0d       	add	r31, r0
    350e:	b1 1d       	adc	r27, r1
    3510:	aa 1f       	adc	r26, r26
    3512:	64 9f       	mul	r22, r20
    3514:	66 27       	eor	r22, r22
    3516:	b0 0d       	add	r27, r0
    3518:	a1 1d       	adc	r26, r1
    351a:	66 1f       	adc	r22, r22
    351c:	82 9f       	mul	r24, r18
    351e:	22 27       	eor	r18, r18
    3520:	b0 0d       	add	r27, r0
    3522:	a1 1d       	adc	r26, r1
    3524:	62 1f       	adc	r22, r18
    3526:	73 9f       	mul	r23, r19
    3528:	b0 0d       	add	r27, r0
    352a:	a1 1d       	adc	r26, r1
    352c:	62 1f       	adc	r22, r18
    352e:	83 9f       	mul	r24, r19
    3530:	a0 0d       	add	r26, r0
    3532:	61 1d       	adc	r22, r1
    3534:	22 1f       	adc	r18, r18
    3536:	74 9f       	mul	r23, r20
    3538:	33 27       	eor	r19, r19
    353a:	a0 0d       	add	r26, r0
    353c:	61 1d       	adc	r22, r1
    353e:	23 1f       	adc	r18, r19
    3540:	84 9f       	mul	r24, r20
    3542:	60 0d       	add	r22, r0
    3544:	21 1d       	adc	r18, r1
    3546:	82 2f       	mov	r24, r18
    3548:	76 2f       	mov	r23, r22
    354a:	6a 2f       	mov	r22, r26
    354c:	11 24       	eor	r1, r1
    354e:	9f 57       	subi	r25, 0x7F	; 127
    3550:	50 40       	sbci	r21, 0x00	; 0
    3552:	9a f0       	brmi	.+38     	; 0x357a <__mulsf3_pse+0x88>
    3554:	f1 f0       	breq	.+60     	; 0x3592 <__mulsf3_pse+0xa0>
    3556:	88 23       	and	r24, r24
    3558:	4a f0       	brmi	.+18     	; 0x356c <__mulsf3_pse+0x7a>
    355a:	ee 0f       	add	r30, r30
    355c:	ff 1f       	adc	r31, r31
    355e:	bb 1f       	adc	r27, r27
    3560:	66 1f       	adc	r22, r22
    3562:	77 1f       	adc	r23, r23
    3564:	88 1f       	adc	r24, r24
    3566:	91 50       	subi	r25, 0x01	; 1
    3568:	50 40       	sbci	r21, 0x00	; 0
    356a:	a9 f7       	brne	.-22     	; 0x3556 <__mulsf3_pse+0x64>
    356c:	9e 3f       	cpi	r25, 0xFE	; 254
    356e:	51 05       	cpc	r21, r1
    3570:	80 f0       	brcs	.+32     	; 0x3592 <__mulsf3_pse+0xa0>
    3572:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    3576:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>
    357a:	5f 3f       	cpi	r21, 0xFF	; 255
    357c:	e4 f3       	brlt	.-8      	; 0x3576 <__mulsf3_pse+0x84>
    357e:	98 3e       	cpi	r25, 0xE8	; 232
    3580:	d4 f3       	brlt	.-12     	; 0x3576 <__mulsf3_pse+0x84>
    3582:	86 95       	lsr	r24
    3584:	77 95       	ror	r23
    3586:	67 95       	ror	r22
    3588:	b7 95       	ror	r27
    358a:	f7 95       	ror	r31
    358c:	e7 95       	ror	r30
    358e:	9f 5f       	subi	r25, 0xFF	; 255
    3590:	c1 f7       	brne	.-16     	; 0x3582 <__mulsf3_pse+0x90>
    3592:	fe 2b       	or	r31, r30
    3594:	88 0f       	add	r24, r24
    3596:	91 1d       	adc	r25, r1
    3598:	96 95       	lsr	r25
    359a:	87 95       	ror	r24
    359c:	97 f9       	bld	r25, 7
    359e:	08 95       	ret

000035a0 <pow>:
    35a0:	fa 01       	movw	r30, r20
    35a2:	ee 0f       	add	r30, r30
    35a4:	ff 1f       	adc	r31, r31
    35a6:	30 96       	adiw	r30, 0x00	; 0
    35a8:	21 05       	cpc	r18, r1
    35aa:	31 05       	cpc	r19, r1
    35ac:	a1 f1       	breq	.+104    	; 0x3616 <pow+0x76>
    35ae:	61 15       	cp	r22, r1
    35b0:	71 05       	cpc	r23, r1
    35b2:	61 f4       	brne	.+24     	; 0x35cc <pow+0x2c>
    35b4:	80 38       	cpi	r24, 0x80	; 128
    35b6:	bf e3       	ldi	r27, 0x3F	; 63
    35b8:	9b 07       	cpc	r25, r27
    35ba:	49 f1       	breq	.+82     	; 0x360e <pow+0x6e>
    35bc:	68 94       	set
    35be:	90 38       	cpi	r25, 0x80	; 128
    35c0:	81 05       	cpc	r24, r1
    35c2:	61 f0       	breq	.+24     	; 0x35dc <pow+0x3c>
    35c4:	80 38       	cpi	r24, 0x80	; 128
    35c6:	bf ef       	ldi	r27, 0xFF	; 255
    35c8:	9b 07       	cpc	r25, r27
    35ca:	41 f0       	breq	.+16     	; 0x35dc <pow+0x3c>
    35cc:	99 23       	and	r25, r25
    35ce:	4a f5       	brpl	.+82     	; 0x3622 <pow+0x82>
    35d0:	ff 3f       	cpi	r31, 0xFF	; 255
    35d2:	e1 05       	cpc	r30, r1
    35d4:	31 05       	cpc	r19, r1
    35d6:	21 05       	cpc	r18, r1
    35d8:	19 f1       	breq	.+70     	; 0x3620 <pow+0x80>
    35da:	e8 94       	clt
    35dc:	08 94       	sec
    35de:	e7 95       	ror	r30
    35e0:	d9 01       	movw	r26, r18
    35e2:	aa 23       	and	r26, r26
    35e4:	29 f4       	brne	.+10     	; 0x35f0 <pow+0x50>
    35e6:	ab 2f       	mov	r26, r27
    35e8:	be 2f       	mov	r27, r30
    35ea:	f8 5f       	subi	r31, 0xF8	; 248
    35ec:	d0 f3       	brcs	.-12     	; 0x35e2 <pow+0x42>
    35ee:	10 c0       	rjmp	.+32     	; 0x3610 <pow+0x70>
    35f0:	ff 5f       	subi	r31, 0xFF	; 255
    35f2:	70 f4       	brcc	.+28     	; 0x3610 <pow+0x70>
    35f4:	a6 95       	lsr	r26
    35f6:	e0 f7       	brcc	.-8      	; 0x35f0 <pow+0x50>
    35f8:	f7 39       	cpi	r31, 0x97	; 151
    35fa:	50 f0       	brcs	.+20     	; 0x3610 <pow+0x70>
    35fc:	19 f0       	breq	.+6      	; 0x3604 <pow+0x64>
    35fe:	ff 3a       	cpi	r31, 0xAF	; 175
    3600:	38 f4       	brcc	.+14     	; 0x3610 <pow+0x70>
    3602:	9f 77       	andi	r25, 0x7F	; 127
    3604:	9f 93       	push	r25
    3606:	0d d0       	rcall	.+26     	; 0x3622 <pow+0x82>
    3608:	0f 90       	pop	r0
    360a:	07 fc       	sbrc	r0, 7
    360c:	90 58       	subi	r25, 0x80	; 128
    360e:	08 95       	ret
    3610:	46 f0       	brts	.+16     	; 0x3622 <pow+0x82>
    3612:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>
    3616:	60 e0       	ldi	r22, 0x00	; 0
    3618:	70 e0       	ldi	r23, 0x00	; 0
    361a:	80 e8       	ldi	r24, 0x80	; 128
    361c:	9f e3       	ldi	r25, 0x3F	; 63
    361e:	08 95       	ret
    3620:	4f e7       	ldi	r20, 0x7F	; 127
    3622:	9f 77       	andi	r25, 0x7F	; 127
    3624:	5f 93       	push	r21
    3626:	4f 93       	push	r20
    3628:	3f 93       	push	r19
    362a:	2f 93       	push	r18
    362c:	0e 94 cb 1b 	call	0x3796	; 0x3796 <log>
    3630:	2f 91       	pop	r18
    3632:	3f 91       	pop	r19
    3634:	4f 91       	pop	r20
    3636:	5f 91       	pop	r21
    3638:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__mulsf3>
    363c:	0c 94 28 1b 	jmp	0x3650	; 0x3650 <exp>
    3640:	29 f4       	brne	.+10     	; 0x364c <pow+0xac>
    3642:	16 f0       	brts	.+4      	; 0x3648 <pow+0xa8>
    3644:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    3648:	0c 94 57 1a 	jmp	0x34ae	; 0x34ae <__fp_zero>
    364c:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>

00003650 <exp>:
    3650:	0e 94 3d 1a 	call	0x347a	; 0x347a <__fp_splitA>
    3654:	a8 f3       	brcs	.-22     	; 0x3640 <pow+0xa0>
    3656:	96 38       	cpi	r25, 0x86	; 134
    3658:	a0 f7       	brcc	.-24     	; 0x3642 <pow+0xa2>
    365a:	07 f8       	bld	r0, 7
    365c:	0f 92       	push	r0
    365e:	e8 94       	clt
    3660:	2b e3       	ldi	r18, 0x3B	; 59
    3662:	3a ea       	ldi	r19, 0xAA	; 170
    3664:	48 eb       	ldi	r20, 0xB8	; 184
    3666:	5f e7       	ldi	r21, 0x7F	; 127
    3668:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <__mulsf3_pse>
    366c:	0f 92       	push	r0
    366e:	0f 92       	push	r0
    3670:	0f 92       	push	r0
    3672:	4d b7       	in	r20, 0x3d	; 61
    3674:	5e b7       	in	r21, 0x3e	; 62
    3676:	0f 92       	push	r0
    3678:	0e 94 13 1c 	call	0x3826	; 0x3826 <modf>
    367c:	e8 ee       	ldi	r30, 0xE8	; 232
    367e:	f0 e0       	ldi	r31, 0x00	; 0
    3680:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_powser>
    3684:	4f 91       	pop	r20
    3686:	5f 91       	pop	r21
    3688:	ef 91       	pop	r30
    368a:	ff 91       	pop	r31
    368c:	e5 95       	asr	r30
    368e:	ee 1f       	adc	r30, r30
    3690:	ff 1f       	adc	r31, r31
    3692:	49 f0       	breq	.+18     	; 0x36a6 <exp+0x56>
    3694:	fe 57       	subi	r31, 0x7E	; 126
    3696:	e0 68       	ori	r30, 0x80	; 128
    3698:	44 27       	eor	r20, r20
    369a:	ee 0f       	add	r30, r30
    369c:	44 1f       	adc	r20, r20
    369e:	fa 95       	dec	r31
    36a0:	e1 f7       	brne	.-8      	; 0x369a <exp+0x4a>
    36a2:	41 95       	neg	r20
    36a4:	55 0b       	sbc	r21, r21
    36a6:	0e 94 8d 1b 	call	0x371a	; 0x371a <ldexp>
    36aa:	0f 90       	pop	r0
    36ac:	07 fe       	sbrs	r0, 7
    36ae:	0c 94 81 1b 	jmp	0x3702	; 0x3702 <inverse>
    36b2:	08 95       	ret

000036b4 <__fp_powser>:
    36b4:	df 93       	push	r29
    36b6:	cf 93       	push	r28
    36b8:	1f 93       	push	r17
    36ba:	0f 93       	push	r16
    36bc:	ff 92       	push	r15
    36be:	ef 92       	push	r14
    36c0:	df 92       	push	r13
    36c2:	7b 01       	movw	r14, r22
    36c4:	8c 01       	movw	r16, r24
    36c6:	68 94       	set
    36c8:	06 c0       	rjmp	.+12     	; 0x36d6 <__fp_powser+0x22>
    36ca:	da 2e       	mov	r13, r26
    36cc:	ef 01       	movw	r28, r30
    36ce:	0e 94 76 1a 	call	0x34ec	; 0x34ec <__mulsf3x>
    36d2:	fe 01       	movw	r30, r28
    36d4:	e8 94       	clt
    36d6:	a5 91       	lpm	r26, Z+
    36d8:	25 91       	lpm	r18, Z+
    36da:	35 91       	lpm	r19, Z+
    36dc:	45 91       	lpm	r20, Z+
    36de:	55 91       	lpm	r21, Z+
    36e0:	a6 f3       	brts	.-24     	; 0x36ca <__fp_powser+0x16>
    36e2:	ef 01       	movw	r28, r30
    36e4:	0e 94 aa 18 	call	0x3154	; 0x3154 <__addsf3x>
    36e8:	fe 01       	movw	r30, r28
    36ea:	97 01       	movw	r18, r14
    36ec:	a8 01       	movw	r20, r16
    36ee:	da 94       	dec	r13
    36f0:	69 f7       	brne	.-38     	; 0x36cc <__fp_powser+0x18>
    36f2:	df 90       	pop	r13
    36f4:	ef 90       	pop	r14
    36f6:	ff 90       	pop	r15
    36f8:	0f 91       	pop	r16
    36fa:	1f 91       	pop	r17
    36fc:	cf 91       	pop	r28
    36fe:	df 91       	pop	r29
    3700:	08 95       	ret

00003702 <inverse>:
    3702:	9b 01       	movw	r18, r22
    3704:	ac 01       	movw	r20, r24
    3706:	60 e0       	ldi	r22, 0x00	; 0
    3708:	70 e0       	ldi	r23, 0x00	; 0
    370a:	80 e8       	ldi	r24, 0x80	; 128
    370c:	9f e3       	ldi	r25, 0x3F	; 63
    370e:	0c 94 04 19 	jmp	0x3208	; 0x3208 <__divsf3>
    3712:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>
    3716:	0c 94 47 1c 	jmp	0x388e	; 0x388e <__fp_mpack>

0000371a <ldexp>:
    371a:	0e 94 3d 1a 	call	0x347a	; 0x347a <__fp_splitA>
    371e:	d8 f3       	brcs	.-10     	; 0x3716 <inverse+0x14>
    3720:	99 23       	and	r25, r25
    3722:	c9 f3       	breq	.-14     	; 0x3716 <inverse+0x14>
    3724:	94 0f       	add	r25, r20
    3726:	51 1d       	adc	r21, r1
    3728:	a3 f3       	brvs	.-24     	; 0x3712 <inverse+0x10>
    372a:	91 50       	subi	r25, 0x01	; 1
    372c:	50 40       	sbci	r21, 0x00	; 0
    372e:	94 f0       	brlt	.+36     	; 0x3754 <ldexp+0x3a>
    3730:	59 f0       	breq	.+22     	; 0x3748 <ldexp+0x2e>
    3732:	88 23       	and	r24, r24
    3734:	32 f0       	brmi	.+12     	; 0x3742 <ldexp+0x28>
    3736:	66 0f       	add	r22, r22
    3738:	77 1f       	adc	r23, r23
    373a:	88 1f       	adc	r24, r24
    373c:	91 50       	subi	r25, 0x01	; 1
    373e:	50 40       	sbci	r21, 0x00	; 0
    3740:	c1 f7       	brne	.-16     	; 0x3732 <ldexp+0x18>
    3742:	9e 3f       	cpi	r25, 0xFE	; 254
    3744:	51 05       	cpc	r21, r1
    3746:	2c f7       	brge	.-54     	; 0x3712 <inverse+0x10>
    3748:	88 0f       	add	r24, r24
    374a:	91 1d       	adc	r25, r1
    374c:	96 95       	lsr	r25
    374e:	87 95       	ror	r24
    3750:	97 f9       	bld	r25, 7
    3752:	08 95       	ret
    3754:	5f 3f       	cpi	r21, 0xFF	; 255
    3756:	ac f0       	brlt	.+42     	; 0x3782 <ldexp+0x68>
    3758:	98 3e       	cpi	r25, 0xE8	; 232
    375a:	9c f0       	brlt	.+38     	; 0x3782 <ldexp+0x68>
    375c:	bb 27       	eor	r27, r27
    375e:	86 95       	lsr	r24
    3760:	77 95       	ror	r23
    3762:	67 95       	ror	r22
    3764:	b7 95       	ror	r27
    3766:	08 f4       	brcc	.+2      	; 0x376a <ldexp+0x50>
    3768:	b1 60       	ori	r27, 0x01	; 1
    376a:	93 95       	inc	r25
    376c:	c1 f7       	brne	.-16     	; 0x375e <ldexp+0x44>
    376e:	bb 0f       	add	r27, r27
    3770:	58 f7       	brcc	.-42     	; 0x3748 <ldexp+0x2e>
    3772:	11 f4       	brne	.+4      	; 0x3778 <ldexp+0x5e>
    3774:	60 ff       	sbrs	r22, 0
    3776:	e8 cf       	rjmp	.-48     	; 0x3748 <ldexp+0x2e>
    3778:	6f 5f       	subi	r22, 0xFF	; 255
    377a:	7f 4f       	sbci	r23, 0xFF	; 255
    377c:	8f 4f       	sbci	r24, 0xFF	; 255
    377e:	9f 4f       	sbci	r25, 0xFF	; 255
    3780:	e3 cf       	rjmp	.-58     	; 0x3748 <ldexp+0x2e>
    3782:	0c 94 58 1a 	jmp	0x34b0	; 0x34b0 <__fp_szero>
    3786:	16 f0       	brts	.+4      	; 0x378c <ldexp+0x72>
    3788:	0c 94 47 1c 	jmp	0x388e	; 0x388e <__fp_mpack>
    378c:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <__fp_nan>
    3790:	68 94       	set
    3792:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_inf>

00003796 <log>:
    3796:	0e 94 3d 1a 	call	0x347a	; 0x347a <__fp_splitA>
    379a:	a8 f3       	brcs	.-22     	; 0x3786 <ldexp+0x6c>
    379c:	99 23       	and	r25, r25
    379e:	c1 f3       	breq	.-16     	; 0x3790 <ldexp+0x76>
    37a0:	ae f3       	brts	.-22     	; 0x378c <ldexp+0x72>
    37a2:	df 93       	push	r29
    37a4:	cf 93       	push	r28
    37a6:	1f 93       	push	r17
    37a8:	0f 93       	push	r16
    37aa:	ff 92       	push	r15
    37ac:	c9 2f       	mov	r28, r25
    37ae:	dd 27       	eor	r29, r29
    37b0:	88 23       	and	r24, r24
    37b2:	2a f0       	brmi	.+10     	; 0x37be <log+0x28>
    37b4:	21 97       	sbiw	r28, 0x01	; 1
    37b6:	66 0f       	add	r22, r22
    37b8:	77 1f       	adc	r23, r23
    37ba:	88 1f       	adc	r24, r24
    37bc:	da f7       	brpl	.-10     	; 0x37b4 <log+0x1e>
    37be:	20 e0       	ldi	r18, 0x00	; 0
    37c0:	30 e0       	ldi	r19, 0x00	; 0
    37c2:	40 e8       	ldi	r20, 0x80	; 128
    37c4:	5f eb       	ldi	r21, 0xBF	; 191
    37c6:	9f e3       	ldi	r25, 0x3F	; 63
    37c8:	88 39       	cpi	r24, 0x98	; 152
    37ca:	20 f0       	brcs	.+8      	; 0x37d4 <log+0x3e>
    37cc:	80 3e       	cpi	r24, 0xE0	; 224
    37ce:	38 f0       	brcs	.+14     	; 0x37de <log+0x48>
    37d0:	21 96       	adiw	r28, 0x01	; 1
    37d2:	8f 77       	andi	r24, 0x7F	; 127
    37d4:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    37d8:	e0 e1       	ldi	r30, 0x10	; 16
    37da:	f1 e0       	ldi	r31, 0x01	; 1
    37dc:	04 c0       	rjmp	.+8      	; 0x37e6 <log+0x50>
    37de:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3>
    37e2:	ed e3       	ldi	r30, 0x3D	; 61
    37e4:	f1 e0       	ldi	r31, 0x01	; 1
    37e6:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_powser>
    37ea:	8b 01       	movw	r16, r22
    37ec:	be 01       	movw	r22, r28
    37ee:	ec 01       	movw	r28, r24
    37f0:	fb 2e       	mov	r15, r27
    37f2:	6f 57       	subi	r22, 0x7F	; 127
    37f4:	71 09       	sbc	r23, r1
    37f6:	75 95       	asr	r23
    37f8:	77 1f       	adc	r23, r23
    37fa:	88 0b       	sbc	r24, r24
    37fc:	99 0b       	sbc	r25, r25
    37fe:	0e 94 ae 19 	call	0x335c	; 0x335c <__floatsisf>
    3802:	28 e1       	ldi	r18, 0x18	; 24
    3804:	32 e7       	ldi	r19, 0x72	; 114
    3806:	41 e3       	ldi	r20, 0x31	; 49
    3808:	5f e3       	ldi	r21, 0x3F	; 63
    380a:	0e 94 76 1a 	call	0x34ec	; 0x34ec <__mulsf3x>
    380e:	af 2d       	mov	r26, r15
    3810:	98 01       	movw	r18, r16
    3812:	ae 01       	movw	r20, r28
    3814:	ff 90       	pop	r15
    3816:	0f 91       	pop	r16
    3818:	1f 91       	pop	r17
    381a:	cf 91       	pop	r28
    381c:	df 91       	pop	r29
    381e:	0e 94 aa 18 	call	0x3154	; 0x3154 <__addsf3x>
    3822:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <__fp_round>

00003826 <modf>:
    3826:	fa 01       	movw	r30, r20
    3828:	dc 01       	movw	r26, r24
    382a:	aa 0f       	add	r26, r26
    382c:	bb 1f       	adc	r27, r27
    382e:	9b 01       	movw	r18, r22
    3830:	ac 01       	movw	r20, r24
    3832:	bf 57       	subi	r27, 0x7F	; 127
    3834:	28 f4       	brcc	.+10     	; 0x3840 <modf+0x1a>
    3836:	22 27       	eor	r18, r18
    3838:	33 27       	eor	r19, r19
    383a:	44 27       	eor	r20, r20
    383c:	50 78       	andi	r21, 0x80	; 128
    383e:	20 c0       	rjmp	.+64     	; 0x3880 <modf+0x5a>
    3840:	b7 51       	subi	r27, 0x17	; 23
    3842:	90 f4       	brcc	.+36     	; 0x3868 <modf+0x42>
    3844:	ab 2f       	mov	r26, r27
    3846:	00 24       	eor	r0, r0
    3848:	46 95       	lsr	r20
    384a:	37 95       	ror	r19
    384c:	27 95       	ror	r18
    384e:	01 1c       	adc	r0, r1
    3850:	a3 95       	inc	r26
    3852:	d2 f3       	brmi	.-12     	; 0x3848 <modf+0x22>
    3854:	00 20       	and	r0, r0
    3856:	71 f0       	breq	.+28     	; 0x3874 <modf+0x4e>
    3858:	22 0f       	add	r18, r18
    385a:	33 1f       	adc	r19, r19
    385c:	44 1f       	adc	r20, r20
    385e:	b3 95       	inc	r27
    3860:	da f3       	brmi	.-10     	; 0x3858 <modf+0x32>
    3862:	0e d0       	rcall	.+28     	; 0x3880 <modf+0x5a>
    3864:	0c 94 92 18 	jmp	0x3124	; 0x3124 <__subsf3>
    3868:	61 30       	cpi	r22, 0x01	; 1
    386a:	71 05       	cpc	r23, r1
    386c:	a0 e8       	ldi	r26, 0x80	; 128
    386e:	8a 07       	cpc	r24, r26
    3870:	b9 46       	sbci	r27, 0x69	; 105
    3872:	30 f4       	brcc	.+12     	; 0x3880 <modf+0x5a>
    3874:	9b 01       	movw	r18, r22
    3876:	ac 01       	movw	r20, r24
    3878:	66 27       	eor	r22, r22
    387a:	77 27       	eor	r23, r23
    387c:	88 27       	eor	r24, r24
    387e:	90 78       	andi	r25, 0x80	; 128
    3880:	30 96       	adiw	r30, 0x00	; 0
    3882:	21 f0       	breq	.+8      	; 0x388c <modf+0x66>
    3884:	20 83       	st	Z, r18
    3886:	31 83       	std	Z+1, r19	; 0x01
    3888:	42 83       	std	Z+2, r20	; 0x02
    388a:	53 83       	std	Z+3, r21	; 0x03
    388c:	08 95       	ret

0000388e <__fp_mpack>:
    388e:	9f 3f       	cpi	r25, 0xFF	; 255
    3890:	31 f0       	breq	.+12     	; 0x389e <__fp_mpack_finite+0xc>

00003892 <__fp_mpack_finite>:
    3892:	91 50       	subi	r25, 0x01	; 1
    3894:	20 f4       	brcc	.+8      	; 0x389e <__fp_mpack_finite+0xc>
    3896:	87 95       	ror	r24
    3898:	77 95       	ror	r23
    389a:	67 95       	ror	r22
    389c:	b7 95       	ror	r27
    389e:	88 0f       	add	r24, r24
    38a0:	91 1d       	adc	r25, r1
    38a2:	96 95       	lsr	r25
    38a4:	87 95       	ror	r24
    38a6:	97 f9       	bld	r25, 7
    38a8:	08 95       	ret

000038aa <__divmodhi4>:
    38aa:	97 fb       	bst	r25, 7
    38ac:	07 2e       	mov	r0, r23
    38ae:	16 f4       	brtc	.+4      	; 0x38b4 <__divmodhi4+0xa>
    38b0:	00 94       	com	r0
    38b2:	07 d0       	rcall	.+14     	; 0x38c2 <__divmodhi4_neg1>
    38b4:	77 fd       	sbrc	r23, 7
    38b6:	09 d0       	rcall	.+18     	; 0x38ca <__divmodhi4_neg2>
    38b8:	0e 94 97 1c 	call	0x392e	; 0x392e <__udivmodhi4>
    38bc:	07 fc       	sbrc	r0, 7
    38be:	05 d0       	rcall	.+10     	; 0x38ca <__divmodhi4_neg2>
    38c0:	3e f4       	brtc	.+14     	; 0x38d0 <__divmodhi4_exit>

000038c2 <__divmodhi4_neg1>:
    38c2:	90 95       	com	r25
    38c4:	81 95       	neg	r24
    38c6:	9f 4f       	sbci	r25, 0xFF	; 255
    38c8:	08 95       	ret

000038ca <__divmodhi4_neg2>:
    38ca:	70 95       	com	r23
    38cc:	61 95       	neg	r22
    38ce:	7f 4f       	sbci	r23, 0xFF	; 255

000038d0 <__divmodhi4_exit>:
    38d0:	08 95       	ret

000038d2 <__divmodsi4>:
    38d2:	05 2e       	mov	r0, r21
    38d4:	97 fb       	bst	r25, 7
    38d6:	1e f4       	brtc	.+6      	; 0x38de <__divmodsi4+0xc>
    38d8:	00 94       	com	r0
    38da:	0e 94 80 1c 	call	0x3900	; 0x3900 <__negsi2>
    38de:	57 fd       	sbrc	r21, 7
    38e0:	07 d0       	rcall	.+14     	; 0x38f0 <__divmodsi4_neg2>
    38e2:	0e 94 ab 1c 	call	0x3956	; 0x3956 <__udivmodsi4>
    38e6:	07 fc       	sbrc	r0, 7
    38e8:	03 d0       	rcall	.+6      	; 0x38f0 <__divmodsi4_neg2>
    38ea:	4e f4       	brtc	.+18     	; 0x38fe <__divmodsi4_exit>
    38ec:	0c 94 80 1c 	jmp	0x3900	; 0x3900 <__negsi2>

000038f0 <__divmodsi4_neg2>:
    38f0:	50 95       	com	r21
    38f2:	40 95       	com	r20
    38f4:	30 95       	com	r19
    38f6:	21 95       	neg	r18
    38f8:	3f 4f       	sbci	r19, 0xFF	; 255
    38fa:	4f 4f       	sbci	r20, 0xFF	; 255
    38fc:	5f 4f       	sbci	r21, 0xFF	; 255

000038fe <__divmodsi4_exit>:
    38fe:	08 95       	ret

00003900 <__negsi2>:
    3900:	90 95       	com	r25
    3902:	80 95       	com	r24
    3904:	70 95       	com	r23
    3906:	61 95       	neg	r22
    3908:	7f 4f       	sbci	r23, 0xFF	; 255
    390a:	8f 4f       	sbci	r24, 0xFF	; 255
    390c:	9f 4f       	sbci	r25, 0xFF	; 255
    390e:	08 95       	ret

00003910 <__umulhisi3>:
    3910:	a2 9f       	mul	r26, r18
    3912:	b0 01       	movw	r22, r0
    3914:	b3 9f       	mul	r27, r19
    3916:	c0 01       	movw	r24, r0
    3918:	a3 9f       	mul	r26, r19
    391a:	70 0d       	add	r23, r0
    391c:	81 1d       	adc	r24, r1
    391e:	11 24       	eor	r1, r1
    3920:	91 1d       	adc	r25, r1
    3922:	b2 9f       	mul	r27, r18
    3924:	70 0d       	add	r23, r0
    3926:	81 1d       	adc	r24, r1
    3928:	11 24       	eor	r1, r1
    392a:	91 1d       	adc	r25, r1
    392c:	08 95       	ret

0000392e <__udivmodhi4>:
    392e:	aa 1b       	sub	r26, r26
    3930:	bb 1b       	sub	r27, r27
    3932:	51 e1       	ldi	r21, 0x11	; 17
    3934:	07 c0       	rjmp	.+14     	; 0x3944 <__udivmodhi4_ep>

00003936 <__udivmodhi4_loop>:
    3936:	aa 1f       	adc	r26, r26
    3938:	bb 1f       	adc	r27, r27
    393a:	a6 17       	cp	r26, r22
    393c:	b7 07       	cpc	r27, r23
    393e:	10 f0       	brcs	.+4      	; 0x3944 <__udivmodhi4_ep>
    3940:	a6 1b       	sub	r26, r22
    3942:	b7 0b       	sbc	r27, r23

00003944 <__udivmodhi4_ep>:
    3944:	88 1f       	adc	r24, r24
    3946:	99 1f       	adc	r25, r25
    3948:	5a 95       	dec	r21
    394a:	a9 f7       	brne	.-22     	; 0x3936 <__udivmodhi4_loop>
    394c:	80 95       	com	r24
    394e:	90 95       	com	r25
    3950:	bc 01       	movw	r22, r24
    3952:	cd 01       	movw	r24, r26
    3954:	08 95       	ret

00003956 <__udivmodsi4>:
    3956:	a1 e2       	ldi	r26, 0x21	; 33
    3958:	1a 2e       	mov	r1, r26
    395a:	aa 1b       	sub	r26, r26
    395c:	bb 1b       	sub	r27, r27
    395e:	fd 01       	movw	r30, r26
    3960:	0d c0       	rjmp	.+26     	; 0x397c <__udivmodsi4_ep>

00003962 <__udivmodsi4_loop>:
    3962:	aa 1f       	adc	r26, r26
    3964:	bb 1f       	adc	r27, r27
    3966:	ee 1f       	adc	r30, r30
    3968:	ff 1f       	adc	r31, r31
    396a:	a2 17       	cp	r26, r18
    396c:	b3 07       	cpc	r27, r19
    396e:	e4 07       	cpc	r30, r20
    3970:	f5 07       	cpc	r31, r21
    3972:	20 f0       	brcs	.+8      	; 0x397c <__udivmodsi4_ep>
    3974:	a2 1b       	sub	r26, r18
    3976:	b3 0b       	sbc	r27, r19
    3978:	e4 0b       	sbc	r30, r20
    397a:	f5 0b       	sbc	r31, r21

0000397c <__udivmodsi4_ep>:
    397c:	66 1f       	adc	r22, r22
    397e:	77 1f       	adc	r23, r23
    3980:	88 1f       	adc	r24, r24
    3982:	99 1f       	adc	r25, r25
    3984:	1a 94       	dec	r1
    3986:	69 f7       	brne	.-38     	; 0x3962 <__udivmodsi4_loop>
    3988:	60 95       	com	r22
    398a:	70 95       	com	r23
    398c:	80 95       	com	r24
    398e:	90 95       	com	r25
    3990:	9b 01       	movw	r18, r22
    3992:	ac 01       	movw	r20, r24
    3994:	bd 01       	movw	r22, r26
    3996:	cf 01       	movw	r24, r30
    3998:	08 95       	ret

0000399a <_exit>:
    399a:	f8 94       	cli

0000399c <__stop_program>:
    399c:	ff cf       	rjmp	.-2      	; 0x399c <__stop_program>
